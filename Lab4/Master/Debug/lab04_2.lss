
lab04_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000d68  00000dfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080006c  0080006c  00000e08  2**0
                  ALLOC
  3 .stab         00001104  00000000  00000000  00000e08  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e8a  00000000  00000000  00001f0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e6       	ldi	r30, 0x68	; 104
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8b 06 	call	0xd16	; 0xd16 <main>
  8a:	0c 94 b2 06 	jmp	0xd64	; 0xd64 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_Vid_Set_Pin_Direction>:

u8 Seg = 'A';

// Pins
void DIO_Vid_Set_Pin_Direction(u8 port, u8 pin, u8 dirction)
{
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	27 97       	sbiw	r28, 0x07	; 7
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
  a6:	89 83       	std	Y+1, r24	; 0x01
  a8:	6a 83       	std	Y+2, r22	; 0x02
  aa:	4b 83       	std	Y+3, r20	; 0x03
    if(dirction == Input)
  ac:	8b 81       	ldd	r24, Y+3	; 0x03
  ae:	88 23       	and	r24, r24
  b0:	09 f0       	breq	.+2      	; 0xb4 <DIO_Vid_Set_Pin_Direction+0x22>
  b2:	74 c0       	rjmp	.+232    	; 0x19c <DIO_Vid_Set_Pin_Direction+0x10a>
        switch (port)
  b4:	89 81       	ldd	r24, Y+1	; 0x01
  b6:	28 2f       	mov	r18, r24
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	3f 83       	std	Y+7, r19	; 0x07
  bc:	2e 83       	std	Y+6, r18	; 0x06
  be:	8e 81       	ldd	r24, Y+6	; 0x06
  c0:	9f 81       	ldd	r25, Y+7	; 0x07
  c2:	81 30       	cpi	r24, 0x01	; 1
  c4:	91 05       	cpc	r25, r1
  c6:	59 f1       	breq	.+86     	; 0x11e <DIO_Vid_Set_Pin_Direction+0x8c>
  c8:	2e 81       	ldd	r18, Y+6	; 0x06
  ca:	3f 81       	ldd	r19, Y+7	; 0x07
  cc:	22 30       	cpi	r18, 0x02	; 2
  ce:	31 05       	cpc	r19, r1
  d0:	2c f4       	brge	.+10     	; 0xdc <DIO_Vid_Set_Pin_Direction+0x4a>
  d2:	8e 81       	ldd	r24, Y+6	; 0x06
  d4:	9f 81       	ldd	r25, Y+7	; 0x07
  d6:	00 97       	sbiw	r24, 0x00	; 0
  d8:	69 f0       	breq	.+26     	; 0xf4 <DIO_Vid_Set_Pin_Direction+0x62>
  da:	d2 c0       	rjmp	.+420    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
  dc:	2e 81       	ldd	r18, Y+6	; 0x06
  de:	3f 81       	ldd	r19, Y+7	; 0x07
  e0:	22 30       	cpi	r18, 0x02	; 2
  e2:	31 05       	cpc	r19, r1
  e4:	89 f1       	breq	.+98     	; 0x148 <DIO_Vid_Set_Pin_Direction+0xb6>
  e6:	8e 81       	ldd	r24, Y+6	; 0x06
  e8:	9f 81       	ldd	r25, Y+7	; 0x07
  ea:	83 30       	cpi	r24, 0x03	; 3
  ec:	91 05       	cpc	r25, r1
  ee:	09 f4       	brne	.+2      	; 0xf2 <DIO_Vid_Set_Pin_Direction+0x60>
  f0:	40 c0       	rjmp	.+128    	; 0x172 <DIO_Vid_Set_Pin_Direction+0xe0>
  f2:	c6 c0       	rjmp	.+396    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
        {
        case Port_A:
            CLR_BIT(DDRA, pin);
  f4:	aa e3       	ldi	r26, 0x3A	; 58
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	ea e3       	ldi	r30, 0x3A	; 58
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	48 2f       	mov	r20, r24
 100:	8a 81       	ldd	r24, Y+2	; 0x02
 102:	28 2f       	mov	r18, r24
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 2e       	mov	r0, r18
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_Vid_Set_Pin_Direction+0x80>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_Vid_Set_Pin_Direction+0x7c>
 116:	80 95       	com	r24
 118:	84 23       	and	r24, r20
 11a:	8c 93       	st	X, r24
 11c:	b1 c0       	rjmp	.+354    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        case Port_B:
            CLR_BIT(DDRB, pin);
 11e:	a7 e3       	ldi	r26, 0x37	; 55
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	e7 e3       	ldi	r30, 0x37	; 55
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	48 2f       	mov	r20, r24
 12a:	8a 81       	ldd	r24, Y+2	; 0x02
 12c:	28 2f       	mov	r18, r24
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 2e       	mov	r0, r18
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_Vid_Set_Pin_Direction+0xaa>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	0a 94       	dec	r0
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_Vid_Set_Pin_Direction+0xa6>
 140:	80 95       	com	r24
 142:	84 23       	and	r24, r20
 144:	8c 93       	st	X, r24
 146:	9c c0       	rjmp	.+312    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        case Port_C:
            CLR_BIT(DDRC, pin);
 148:	a4 e3       	ldi	r26, 0x34	; 52
 14a:	b0 e0       	ldi	r27, 0x00	; 0
 14c:	e4 e3       	ldi	r30, 0x34	; 52
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	48 2f       	mov	r20, r24
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	28 2f       	mov	r18, r24
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 2e       	mov	r0, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_Vid_Set_Pin_Direction+0xd4>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_Vid_Set_Pin_Direction+0xd0>
 16a:	80 95       	com	r24
 16c:	84 23       	and	r24, r20
 16e:	8c 93       	st	X, r24
 170:	87 c0       	rjmp	.+270    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        case Port_D:
            CLR_BIT(DDRD, pin);
 172:	a1 e3       	ldi	r26, 0x31	; 49
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	e1 e3       	ldi	r30, 0x31	; 49
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	80 81       	ld	r24, Z
 17c:	48 2f       	mov	r20, r24
 17e:	8a 81       	ldd	r24, Y+2	; 0x02
 180:	28 2f       	mov	r18, r24
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	02 2e       	mov	r0, r18
 18a:	02 c0       	rjmp	.+4      	; 0x190 <DIO_Vid_Set_Pin_Direction+0xfe>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	0a 94       	dec	r0
 192:	e2 f7       	brpl	.-8      	; 0x18c <DIO_Vid_Set_Pin_Direction+0xfa>
 194:	80 95       	com	r24
 196:	84 23       	and	r24, r20
 198:	8c 93       	st	X, r24
 19a:	72 c0       	rjmp	.+228    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        }
    
    else if (dirction == Output)
 19c:	8b 81       	ldd	r24, Y+3	; 0x03
 19e:	81 30       	cpi	r24, 0x01	; 1
 1a0:	09 f0       	breq	.+2      	; 0x1a4 <DIO_Vid_Set_Pin_Direction+0x112>
 1a2:	6e c0       	rjmp	.+220    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
        switch (port)
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	3d 83       	std	Y+5, r19	; 0x05
 1ac:	2c 83       	std	Y+4, r18	; 0x04
 1ae:	8c 81       	ldd	r24, Y+4	; 0x04
 1b0:	9d 81       	ldd	r25, Y+5	; 0x05
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	91 05       	cpc	r25, r1
 1b6:	49 f1       	breq	.+82     	; 0x20a <DIO_Vid_Set_Pin_Direction+0x178>
 1b8:	2c 81       	ldd	r18, Y+4	; 0x04
 1ba:	3d 81       	ldd	r19, Y+5	; 0x05
 1bc:	22 30       	cpi	r18, 0x02	; 2
 1be:	31 05       	cpc	r19, r1
 1c0:	2c f4       	brge	.+10     	; 0x1cc <DIO_Vid_Set_Pin_Direction+0x13a>
 1c2:	8c 81       	ldd	r24, Y+4	; 0x04
 1c4:	9d 81       	ldd	r25, Y+5	; 0x05
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	61 f0       	breq	.+24     	; 0x1e2 <DIO_Vid_Set_Pin_Direction+0x150>
 1ca:	5a c0       	rjmp	.+180    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
 1cc:	2c 81       	ldd	r18, Y+4	; 0x04
 1ce:	3d 81       	ldd	r19, Y+5	; 0x05
 1d0:	22 30       	cpi	r18, 0x02	; 2
 1d2:	31 05       	cpc	r19, r1
 1d4:	71 f1       	breq	.+92     	; 0x232 <DIO_Vid_Set_Pin_Direction+0x1a0>
 1d6:	8c 81       	ldd	r24, Y+4	; 0x04
 1d8:	9d 81       	ldd	r25, Y+5	; 0x05
 1da:	83 30       	cpi	r24, 0x03	; 3
 1dc:	91 05       	cpc	r25, r1
 1de:	e9 f1       	breq	.+122    	; 0x25a <DIO_Vid_Set_Pin_Direction+0x1c8>
 1e0:	4f c0       	rjmp	.+158    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
        {
        case Port_A:
            SET_BIT(DDRA, pin);
 1e2:	aa e3       	ldi	r26, 0x3A	; 58
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	ea e3       	ldi	r30, 0x3A	; 58
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	48 2f       	mov	r20, r24
 1ee:	8a 81       	ldd	r24, Y+2	; 0x02
 1f0:	28 2f       	mov	r18, r24
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 2e       	mov	r0, r18
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_Vid_Set_Pin_Direction+0x16e>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	0a 94       	dec	r0
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_Vid_Set_Pin_Direction+0x16a>
 204:	84 2b       	or	r24, r20
 206:	8c 93       	st	X, r24
 208:	3b c0       	rjmp	.+118    	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        case Port_B:
            SET_BIT(DDRB, pin);
 20a:	a7 e3       	ldi	r26, 0x37	; 55
 20c:	b0 e0       	ldi	r27, 0x00	; 0
 20e:	e7 e3       	ldi	r30, 0x37	; 55
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	48 2f       	mov	r20, r24
 216:	8a 81       	ldd	r24, Y+2	; 0x02
 218:	28 2f       	mov	r18, r24
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 2e       	mov	r0, r18
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_Vid_Set_Pin_Direction+0x196>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	0a 94       	dec	r0
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_Vid_Set_Pin_Direction+0x192>
 22c:	84 2b       	or	r24, r20
 22e:	8c 93       	st	X, r24
 230:	27 c0       	rjmp	.+78     	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        case Port_C:
            SET_BIT(DDRC, pin);
 232:	a4 e3       	ldi	r26, 0x34	; 52
 234:	b0 e0       	ldi	r27, 0x00	; 0
 236:	e4 e3       	ldi	r30, 0x34	; 52
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	48 2f       	mov	r20, r24
 23e:	8a 81       	ldd	r24, Y+2	; 0x02
 240:	28 2f       	mov	r18, r24
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 2e       	mov	r0, r18
 24a:	02 c0       	rjmp	.+4      	; 0x250 <DIO_Vid_Set_Pin_Direction+0x1be>
 24c:	88 0f       	add	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	0a 94       	dec	r0
 252:	e2 f7       	brpl	.-8      	; 0x24c <DIO_Vid_Set_Pin_Direction+0x1ba>
 254:	84 2b       	or	r24, r20
 256:	8c 93       	st	X, r24
 258:	13 c0       	rjmp	.+38     	; 0x280 <DIO_Vid_Set_Pin_Direction+0x1ee>
            break;
        case Port_D:
            SET_BIT(DDRD, pin);
 25a:	a1 e3       	ldi	r26, 0x31	; 49
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	e1 e3       	ldi	r30, 0x31	; 49
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	48 2f       	mov	r20, r24
 266:	8a 81       	ldd	r24, Y+2	; 0x02
 268:	28 2f       	mov	r18, r24
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	02 2e       	mov	r0, r18
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_Vid_Set_Pin_Direction+0x1e6>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	0a 94       	dec	r0
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_Vid_Set_Pin_Direction+0x1e2>
 27c:	84 2b       	or	r24, r20
 27e:	8c 93       	st	X, r24
            break;
        }
}
 280:	27 96       	adiw	r28, 0x07	; 7
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	de bf       	out	0x3e, r29	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	cd bf       	out	0x3d, r28	; 61
 28c:	cf 91       	pop	r28
 28e:	df 91       	pop	r29
 290:	08 95       	ret

00000292 <DIO_Vid_Set_Pin_Value>:

void DIO_Vid_Set_Pin_Value(u8 port, u8 pin, u8 value){
 292:	df 93       	push	r29
 294:	cf 93       	push	r28
 296:	cd b7       	in	r28, 0x3d	; 61
 298:	de b7       	in	r29, 0x3e	; 62
 29a:	27 97       	sbiw	r28, 0x07	; 7
 29c:	0f b6       	in	r0, 0x3f	; 63
 29e:	f8 94       	cli
 2a0:	de bf       	out	0x3e, r29	; 62
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	cd bf       	out	0x3d, r28	; 61
 2a6:	89 83       	std	Y+1, r24	; 0x01
 2a8:	6a 83       	std	Y+2, r22	; 0x02
 2aa:	4b 83       	std	Y+3, r20	; 0x03
    if (value == Low)
 2ac:	8b 81       	ldd	r24, Y+3	; 0x03
 2ae:	88 23       	and	r24, r24
 2b0:	09 f0       	breq	.+2      	; 0x2b4 <DIO_Vid_Set_Pin_Value+0x22>
 2b2:	74 c0       	rjmp	.+232    	; 0x39c <DIO_Vid_Set_Pin_Value+0x10a>
        switch (port)
 2b4:	89 81       	ldd	r24, Y+1	; 0x01
 2b6:	28 2f       	mov	r18, r24
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	3f 83       	std	Y+7, r19	; 0x07
 2bc:	2e 83       	std	Y+6, r18	; 0x06
 2be:	8e 81       	ldd	r24, Y+6	; 0x06
 2c0:	9f 81       	ldd	r25, Y+7	; 0x07
 2c2:	81 30       	cpi	r24, 0x01	; 1
 2c4:	91 05       	cpc	r25, r1
 2c6:	59 f1       	breq	.+86     	; 0x31e <DIO_Vid_Set_Pin_Value+0x8c>
 2c8:	2e 81       	ldd	r18, Y+6	; 0x06
 2ca:	3f 81       	ldd	r19, Y+7	; 0x07
 2cc:	22 30       	cpi	r18, 0x02	; 2
 2ce:	31 05       	cpc	r19, r1
 2d0:	2c f4       	brge	.+10     	; 0x2dc <DIO_Vid_Set_Pin_Value+0x4a>
 2d2:	8e 81       	ldd	r24, Y+6	; 0x06
 2d4:	9f 81       	ldd	r25, Y+7	; 0x07
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	69 f0       	breq	.+26     	; 0x2f4 <DIO_Vid_Set_Pin_Value+0x62>
 2da:	d2 c0       	rjmp	.+420    	; 0x480 <__stack+0x21>
 2dc:	2e 81       	ldd	r18, Y+6	; 0x06
 2de:	3f 81       	ldd	r19, Y+7	; 0x07
 2e0:	22 30       	cpi	r18, 0x02	; 2
 2e2:	31 05       	cpc	r19, r1
 2e4:	89 f1       	breq	.+98     	; 0x348 <DIO_Vid_Set_Pin_Value+0xb6>
 2e6:	8e 81       	ldd	r24, Y+6	; 0x06
 2e8:	9f 81       	ldd	r25, Y+7	; 0x07
 2ea:	83 30       	cpi	r24, 0x03	; 3
 2ec:	91 05       	cpc	r25, r1
 2ee:	09 f4       	brne	.+2      	; 0x2f2 <DIO_Vid_Set_Pin_Value+0x60>
 2f0:	40 c0       	rjmp	.+128    	; 0x372 <DIO_Vid_Set_Pin_Value+0xe0>
 2f2:	c6 c0       	rjmp	.+396    	; 0x480 <__stack+0x21>
        {
        case Port_A:
            CLR_BIT(PORTA, pin);
 2f4:	ab e3       	ldi	r26, 0x3B	; 59
 2f6:	b0 e0       	ldi	r27, 0x00	; 0
 2f8:	eb e3       	ldi	r30, 0x3B	; 59
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	80 81       	ld	r24, Z
 2fe:	48 2f       	mov	r20, r24
 300:	8a 81       	ldd	r24, Y+2	; 0x02
 302:	28 2f       	mov	r18, r24
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	02 2e       	mov	r0, r18
 30c:	02 c0       	rjmp	.+4      	; 0x312 <DIO_Vid_Set_Pin_Value+0x80>
 30e:	88 0f       	add	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	0a 94       	dec	r0
 314:	e2 f7       	brpl	.-8      	; 0x30e <DIO_Vid_Set_Pin_Value+0x7c>
 316:	80 95       	com	r24
 318:	84 23       	and	r24, r20
 31a:	8c 93       	st	X, r24
 31c:	b1 c0       	rjmp	.+354    	; 0x480 <__stack+0x21>
            break;
        case Port_B:
            CLR_BIT(PORTB, pin);
 31e:	a8 e3       	ldi	r26, 0x38	; 56
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	e8 e3       	ldi	r30, 0x38	; 56
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	48 2f       	mov	r20, r24
 32a:	8a 81       	ldd	r24, Y+2	; 0x02
 32c:	28 2f       	mov	r18, r24
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	02 2e       	mov	r0, r18
 336:	02 c0       	rjmp	.+4      	; 0x33c <DIO_Vid_Set_Pin_Value+0xaa>
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	0a 94       	dec	r0
 33e:	e2 f7       	brpl	.-8      	; 0x338 <DIO_Vid_Set_Pin_Value+0xa6>
 340:	80 95       	com	r24
 342:	84 23       	and	r24, r20
 344:	8c 93       	st	X, r24
 346:	9c c0       	rjmp	.+312    	; 0x480 <__stack+0x21>
            break;
        case Port_C:
            CLR_BIT(PORTC, pin);
 348:	a5 e3       	ldi	r26, 0x35	; 53
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	e5 e3       	ldi	r30, 0x35	; 53
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	80 81       	ld	r24, Z
 352:	48 2f       	mov	r20, r24
 354:	8a 81       	ldd	r24, Y+2	; 0x02
 356:	28 2f       	mov	r18, r24
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	02 2e       	mov	r0, r18
 360:	02 c0       	rjmp	.+4      	; 0x366 <DIO_Vid_Set_Pin_Value+0xd4>
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	0a 94       	dec	r0
 368:	e2 f7       	brpl	.-8      	; 0x362 <DIO_Vid_Set_Pin_Value+0xd0>
 36a:	80 95       	com	r24
 36c:	84 23       	and	r24, r20
 36e:	8c 93       	st	X, r24
 370:	87 c0       	rjmp	.+270    	; 0x480 <__stack+0x21>
            break;
        case Port_D:
            CLR_BIT(PORTD, pin);
 372:	a2 e3       	ldi	r26, 0x32	; 50
 374:	b0 e0       	ldi	r27, 0x00	; 0
 376:	e2 e3       	ldi	r30, 0x32	; 50
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	48 2f       	mov	r20, r24
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
 380:	28 2f       	mov	r18, r24
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	02 2e       	mov	r0, r18
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_Vid_Set_Pin_Value+0xfe>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_Vid_Set_Pin_Value+0xfa>
 394:	80 95       	com	r24
 396:	84 23       	and	r24, r20
 398:	8c 93       	st	X, r24
 39a:	72 c0       	rjmp	.+228    	; 0x480 <__stack+0x21>
            break;
        }

    else if (value == High)
 39c:	8b 81       	ldd	r24, Y+3	; 0x03
 39e:	81 30       	cpi	r24, 0x01	; 1
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <DIO_Vid_Set_Pin_Value+0x112>
 3a2:	6e c0       	rjmp	.+220    	; 0x480 <__stack+0x21>
        switch (port)
 3a4:	89 81       	ldd	r24, Y+1	; 0x01
 3a6:	28 2f       	mov	r18, r24
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	3d 83       	std	Y+5, r19	; 0x05
 3ac:	2c 83       	std	Y+4, r18	; 0x04
 3ae:	8c 81       	ldd	r24, Y+4	; 0x04
 3b0:	9d 81       	ldd	r25, Y+5	; 0x05
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	91 05       	cpc	r25, r1
 3b6:	49 f1       	breq	.+82     	; 0x40a <DIO_Vid_Set_Pin_Value+0x178>
 3b8:	2c 81       	ldd	r18, Y+4	; 0x04
 3ba:	3d 81       	ldd	r19, Y+5	; 0x05
 3bc:	22 30       	cpi	r18, 0x02	; 2
 3be:	31 05       	cpc	r19, r1
 3c0:	2c f4       	brge	.+10     	; 0x3cc <DIO_Vid_Set_Pin_Value+0x13a>
 3c2:	8c 81       	ldd	r24, Y+4	; 0x04
 3c4:	9d 81       	ldd	r25, Y+5	; 0x05
 3c6:	00 97       	sbiw	r24, 0x00	; 0
 3c8:	61 f0       	breq	.+24     	; 0x3e2 <DIO_Vid_Set_Pin_Value+0x150>
 3ca:	5a c0       	rjmp	.+180    	; 0x480 <__stack+0x21>
 3cc:	2c 81       	ldd	r18, Y+4	; 0x04
 3ce:	3d 81       	ldd	r19, Y+5	; 0x05
 3d0:	22 30       	cpi	r18, 0x02	; 2
 3d2:	31 05       	cpc	r19, r1
 3d4:	71 f1       	breq	.+92     	; 0x432 <DIO_Vid_Set_Pin_Value+0x1a0>
 3d6:	8c 81       	ldd	r24, Y+4	; 0x04
 3d8:	9d 81       	ldd	r25, Y+5	; 0x05
 3da:	83 30       	cpi	r24, 0x03	; 3
 3dc:	91 05       	cpc	r25, r1
 3de:	e9 f1       	breq	.+122    	; 0x45a <DIO_Vid_Set_Pin_Value+0x1c8>
 3e0:	4f c0       	rjmp	.+158    	; 0x480 <__stack+0x21>
        {
        case Port_A:
            SET_BIT(PORTA, pin);
 3e2:	ab e3       	ldi	r26, 0x3B	; 59
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	eb e3       	ldi	r30, 0x3B	; 59
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	80 81       	ld	r24, Z
 3ec:	48 2f       	mov	r20, r24
 3ee:	8a 81       	ldd	r24, Y+2	; 0x02
 3f0:	28 2f       	mov	r18, r24
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	02 2e       	mov	r0, r18
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <DIO_Vid_Set_Pin_Value+0x16e>
 3fc:	88 0f       	add	r24, r24
 3fe:	99 1f       	adc	r25, r25
 400:	0a 94       	dec	r0
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_Vid_Set_Pin_Value+0x16a>
 404:	84 2b       	or	r24, r20
 406:	8c 93       	st	X, r24
 408:	3b c0       	rjmp	.+118    	; 0x480 <__stack+0x21>
            break;
        case Port_B:
            SET_BIT(PORTB, pin);
 40a:	a8 e3       	ldi	r26, 0x38	; 56
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	e8 e3       	ldi	r30, 0x38	; 56
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	48 2f       	mov	r20, r24
 416:	8a 81       	ldd	r24, Y+2	; 0x02
 418:	28 2f       	mov	r18, r24
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	02 2e       	mov	r0, r18
 422:	02 c0       	rjmp	.+4      	; 0x428 <DIO_Vid_Set_Pin_Value+0x196>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	0a 94       	dec	r0
 42a:	e2 f7       	brpl	.-8      	; 0x424 <DIO_Vid_Set_Pin_Value+0x192>
 42c:	84 2b       	or	r24, r20
 42e:	8c 93       	st	X, r24
 430:	27 c0       	rjmp	.+78     	; 0x480 <__stack+0x21>
            break;
        case Port_C:
            SET_BIT(PORTC, pin);
 432:	a5 e3       	ldi	r26, 0x35	; 53
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	e5 e3       	ldi	r30, 0x35	; 53
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	48 2f       	mov	r20, r24
 43e:	8a 81       	ldd	r24, Y+2	; 0x02
 440:	28 2f       	mov	r18, r24
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	02 2e       	mov	r0, r18
 44a:	02 c0       	rjmp	.+4      	; 0x450 <DIO_Vid_Set_Pin_Value+0x1be>
 44c:	88 0f       	add	r24, r24
 44e:	99 1f       	adc	r25, r25
 450:	0a 94       	dec	r0
 452:	e2 f7       	brpl	.-8      	; 0x44c <DIO_Vid_Set_Pin_Value+0x1ba>
 454:	84 2b       	or	r24, r20
 456:	8c 93       	st	X, r24
 458:	13 c0       	rjmp	.+38     	; 0x480 <__stack+0x21>
            break;
        case Port_D:
            SET_BIT(PORTD, pin);
 45a:	a2 e3       	ldi	r26, 0x32	; 50
 45c:	b0 e0       	ldi	r27, 0x00	; 0
 45e:	e2 e3       	ldi	r30, 0x32	; 50
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	80 81       	ld	r24, Z
 464:	48 2f       	mov	r20, r24
 466:	8a 81       	ldd	r24, Y+2	; 0x02
 468:	28 2f       	mov	r18, r24
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	02 2e       	mov	r0, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <__stack+0x19>
 474:	88 0f       	add	r24, r24
 476:	99 1f       	adc	r25, r25
 478:	0a 94       	dec	r0
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__stack+0x15>
 47c:	84 2b       	or	r24, r20
 47e:	8c 93       	st	X, r24
            break;
        }
}
 480:	27 96       	adiw	r28, 0x07	; 7
 482:	0f b6       	in	r0, 0x3f	; 63
 484:	f8 94       	cli
 486:	de bf       	out	0x3e, r29	; 62
 488:	0f be       	out	0x3f, r0	; 63
 48a:	cd bf       	out	0x3d, r28	; 61
 48c:	cf 91       	pop	r28
 48e:	df 91       	pop	r29
 490:	08 95       	ret

00000492 <DIO_Vid_Get_Pin_Value>:

void DIO_Vid_Get_Pin_Value(u8 port, u8 pin, u8 *value)
{
 492:	df 93       	push	r29
 494:	cf 93       	push	r28
 496:	00 d0       	rcall	.+0      	; 0x498 <DIO_Vid_Get_Pin_Value+0x6>
 498:	00 d0       	rcall	.+0      	; 0x49a <DIO_Vid_Get_Pin_Value+0x8>
 49a:	00 d0       	rcall	.+0      	; 0x49c <DIO_Vid_Get_Pin_Value+0xa>
 49c:	cd b7       	in	r28, 0x3d	; 61
 49e:	de b7       	in	r29, 0x3e	; 62
 4a0:	89 83       	std	Y+1, r24	; 0x01
 4a2:	6a 83       	std	Y+2, r22	; 0x02
 4a4:	5c 83       	std	Y+4, r21	; 0x04
 4a6:	4b 83       	std	Y+3, r20	; 0x03
    switch (port)
 4a8:	89 81       	ldd	r24, Y+1	; 0x01
 4aa:	28 2f       	mov	r18, r24
 4ac:	30 e0       	ldi	r19, 0x00	; 0
 4ae:	3e 83       	std	Y+6, r19	; 0x06
 4b0:	2d 83       	std	Y+5, r18	; 0x05
 4b2:	4d 81       	ldd	r20, Y+5	; 0x05
 4b4:	5e 81       	ldd	r21, Y+6	; 0x06
 4b6:	41 30       	cpi	r20, 0x01	; 1
 4b8:	51 05       	cpc	r21, r1
 4ba:	59 f1       	breq	.+86     	; 0x512 <DIO_Vid_Get_Pin_Value+0x80>
 4bc:	8d 81       	ldd	r24, Y+5	; 0x05
 4be:	9e 81       	ldd	r25, Y+6	; 0x06
 4c0:	82 30       	cpi	r24, 0x02	; 2
 4c2:	91 05       	cpc	r25, r1
 4c4:	34 f4       	brge	.+12     	; 0x4d2 <DIO_Vid_Get_Pin_Value+0x40>
 4c6:	2d 81       	ldd	r18, Y+5	; 0x05
 4c8:	3e 81       	ldd	r19, Y+6	; 0x06
 4ca:	21 15       	cp	r18, r1
 4cc:	31 05       	cpc	r19, r1
 4ce:	69 f0       	breq	.+26     	; 0x4ea <DIO_Vid_Get_Pin_Value+0x58>
 4d0:	5b c0       	rjmp	.+182    	; 0x588 <DIO_Vid_Get_Pin_Value+0xf6>
 4d2:	4d 81       	ldd	r20, Y+5	; 0x05
 4d4:	5e 81       	ldd	r21, Y+6	; 0x06
 4d6:	42 30       	cpi	r20, 0x02	; 2
 4d8:	51 05       	cpc	r21, r1
 4da:	79 f1       	breq	.+94     	; 0x53a <DIO_Vid_Get_Pin_Value+0xa8>
 4dc:	8d 81       	ldd	r24, Y+5	; 0x05
 4de:	9e 81       	ldd	r25, Y+6	; 0x06
 4e0:	83 30       	cpi	r24, 0x03	; 3
 4e2:	91 05       	cpc	r25, r1
 4e4:	09 f4       	brne	.+2      	; 0x4e8 <DIO_Vid_Get_Pin_Value+0x56>
 4e6:	3d c0       	rjmp	.+122    	; 0x562 <DIO_Vid_Get_Pin_Value+0xd0>
 4e8:	4f c0       	rjmp	.+158    	; 0x588 <DIO_Vid_Get_Pin_Value+0xf6>
    {
    case Port_A:
        *value = GET_BIT(PORTA, pin);
 4ea:	eb e3       	ldi	r30, 0x3B	; 59
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	80 81       	ld	r24, Z
 4f0:	28 2f       	mov	r18, r24
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	8a 81       	ldd	r24, Y+2	; 0x02
 4f6:	88 2f       	mov	r24, r24
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	a9 01       	movw	r20, r18
 4fc:	02 c0       	rjmp	.+4      	; 0x502 <DIO_Vid_Get_Pin_Value+0x70>
 4fe:	55 95       	asr	r21
 500:	47 95       	ror	r20
 502:	8a 95       	dec	r24
 504:	e2 f7       	brpl	.-8      	; 0x4fe <DIO_Vid_Get_Pin_Value+0x6c>
 506:	ca 01       	movw	r24, r20
 508:	81 70       	andi	r24, 0x01	; 1
 50a:	eb 81       	ldd	r30, Y+3	; 0x03
 50c:	fc 81       	ldd	r31, Y+4	; 0x04
 50e:	80 83       	st	Z, r24
 510:	3b c0       	rjmp	.+118    	; 0x588 <DIO_Vid_Get_Pin_Value+0xf6>
        break;

    case Port_B:
        *value = GET_BIT(PORTB, pin);
 512:	e8 e3       	ldi	r30, 0x38	; 56
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	80 81       	ld	r24, Z
 518:	28 2f       	mov	r18, r24
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	8a 81       	ldd	r24, Y+2	; 0x02
 51e:	88 2f       	mov	r24, r24
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	a9 01       	movw	r20, r18
 524:	02 c0       	rjmp	.+4      	; 0x52a <DIO_Vid_Get_Pin_Value+0x98>
 526:	55 95       	asr	r21
 528:	47 95       	ror	r20
 52a:	8a 95       	dec	r24
 52c:	e2 f7       	brpl	.-8      	; 0x526 <DIO_Vid_Get_Pin_Value+0x94>
 52e:	ca 01       	movw	r24, r20
 530:	81 70       	andi	r24, 0x01	; 1
 532:	eb 81       	ldd	r30, Y+3	; 0x03
 534:	fc 81       	ldd	r31, Y+4	; 0x04
 536:	80 83       	st	Z, r24
 538:	27 c0       	rjmp	.+78     	; 0x588 <DIO_Vid_Get_Pin_Value+0xf6>
        break;

    case Port_C:
        *value = GET_BIT(PORTC, pin);
 53a:	e5 e3       	ldi	r30, 0x35	; 53
 53c:	f0 e0       	ldi	r31, 0x00	; 0
 53e:	80 81       	ld	r24, Z
 540:	28 2f       	mov	r18, r24
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	8a 81       	ldd	r24, Y+2	; 0x02
 546:	88 2f       	mov	r24, r24
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	a9 01       	movw	r20, r18
 54c:	02 c0       	rjmp	.+4      	; 0x552 <DIO_Vid_Get_Pin_Value+0xc0>
 54e:	55 95       	asr	r21
 550:	47 95       	ror	r20
 552:	8a 95       	dec	r24
 554:	e2 f7       	brpl	.-8      	; 0x54e <DIO_Vid_Get_Pin_Value+0xbc>
 556:	ca 01       	movw	r24, r20
 558:	81 70       	andi	r24, 0x01	; 1
 55a:	eb 81       	ldd	r30, Y+3	; 0x03
 55c:	fc 81       	ldd	r31, Y+4	; 0x04
 55e:	80 83       	st	Z, r24
 560:	13 c0       	rjmp	.+38     	; 0x588 <DIO_Vid_Get_Pin_Value+0xf6>
        break;

    case Port_D:
        *value = GET_BIT(PORTD, pin);
 562:	e2 e3       	ldi	r30, 0x32	; 50
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	80 81       	ld	r24, Z
 568:	28 2f       	mov	r18, r24
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	8a 81       	ldd	r24, Y+2	; 0x02
 56e:	88 2f       	mov	r24, r24
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	a9 01       	movw	r20, r18
 574:	02 c0       	rjmp	.+4      	; 0x57a <DIO_Vid_Get_Pin_Value+0xe8>
 576:	55 95       	asr	r21
 578:	47 95       	ror	r20
 57a:	8a 95       	dec	r24
 57c:	e2 f7       	brpl	.-8      	; 0x576 <DIO_Vid_Get_Pin_Value+0xe4>
 57e:	ca 01       	movw	r24, r20
 580:	81 70       	andi	r24, 0x01	; 1
 582:	eb 81       	ldd	r30, Y+3	; 0x03
 584:	fc 81       	ldd	r31, Y+4	; 0x04
 586:	80 83       	st	Z, r24
        break;
    }
}
 588:	26 96       	adiw	r28, 0x06	; 6
 58a:	0f b6       	in	r0, 0x3f	; 63
 58c:	f8 94       	cli
 58e:	de bf       	out	0x3e, r29	; 62
 590:	0f be       	out	0x3f, r0	; 63
 592:	cd bf       	out	0x3d, r28	; 61
 594:	cf 91       	pop	r28
 596:	df 91       	pop	r29
 598:	08 95       	ret

0000059a <DIO_Vid_Set_Port_Direction>:

// Ports
void DIO_Vid_Set_Port_Direction(u8 port, u8 direction)
{
 59a:	df 93       	push	r29
 59c:	cf 93       	push	r28
 59e:	00 d0       	rcall	.+0      	; 0x5a0 <DIO_Vid_Set_Port_Direction+0x6>
 5a0:	00 d0       	rcall	.+0      	; 0x5a2 <DIO_Vid_Set_Port_Direction+0x8>
 5a2:	00 d0       	rcall	.+0      	; 0x5a4 <DIO_Vid_Set_Port_Direction+0xa>
 5a4:	cd b7       	in	r28, 0x3d	; 61
 5a6:	de b7       	in	r29, 0x3e	; 62
 5a8:	89 83       	std	Y+1, r24	; 0x01
 5aa:	6a 83       	std	Y+2, r22	; 0x02
    if(direction == Input)
 5ac:	8a 81       	ldd	r24, Y+2	; 0x02
 5ae:	88 23       	and	r24, r24
 5b0:	79 f5       	brne	.+94     	; 0x610 <DIO_Vid_Set_Port_Direction+0x76>
        switch (port)
 5b2:	89 81       	ldd	r24, Y+1	; 0x01
 5b4:	28 2f       	mov	r18, r24
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	3e 83       	std	Y+6, r19	; 0x06
 5ba:	2d 83       	std	Y+5, r18	; 0x05
 5bc:	8d 81       	ldd	r24, Y+5	; 0x05
 5be:	9e 81       	ldd	r25, Y+6	; 0x06
 5c0:	81 30       	cpi	r24, 0x01	; 1
 5c2:	91 05       	cpc	r25, r1
 5c4:	c9 f0       	breq	.+50     	; 0x5f8 <DIO_Vid_Set_Port_Direction+0x5e>
 5c6:	2d 81       	ldd	r18, Y+5	; 0x05
 5c8:	3e 81       	ldd	r19, Y+6	; 0x06
 5ca:	22 30       	cpi	r18, 0x02	; 2
 5cc:	31 05       	cpc	r19, r1
 5ce:	2c f4       	brge	.+10     	; 0x5da <DIO_Vid_Set_Port_Direction+0x40>
 5d0:	8d 81       	ldd	r24, Y+5	; 0x05
 5d2:	9e 81       	ldd	r25, Y+6	; 0x06
 5d4:	00 97       	sbiw	r24, 0x00	; 0
 5d6:	61 f0       	breq	.+24     	; 0x5f0 <DIO_Vid_Set_Port_Direction+0x56>
 5d8:	50 c0       	rjmp	.+160    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
 5da:	2d 81       	ldd	r18, Y+5	; 0x05
 5dc:	3e 81       	ldd	r19, Y+6	; 0x06
 5de:	22 30       	cpi	r18, 0x02	; 2
 5e0:	31 05       	cpc	r19, r1
 5e2:	71 f0       	breq	.+28     	; 0x600 <DIO_Vid_Set_Port_Direction+0x66>
 5e4:	8d 81       	ldd	r24, Y+5	; 0x05
 5e6:	9e 81       	ldd	r25, Y+6	; 0x06
 5e8:	83 30       	cpi	r24, 0x03	; 3
 5ea:	91 05       	cpc	r25, r1
 5ec:	69 f0       	breq	.+26     	; 0x608 <DIO_Vid_Set_Port_Direction+0x6e>
 5ee:	45 c0       	rjmp	.+138    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
        {
        case Port_A:
            DDRA = 0x00;
 5f0:	ea e3       	ldi	r30, 0x3A	; 58
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	10 82       	st	Z, r1
 5f6:	41 c0       	rjmp	.+130    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;

        case Port_B:
            DDRB = 0x00;
 5f8:	e7 e3       	ldi	r30, 0x37	; 55
 5fa:	f0 e0       	ldi	r31, 0x00	; 0
 5fc:	10 82       	st	Z, r1
 5fe:	3d c0       	rjmp	.+122    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;

        case Port_C:
            DDRC = 0x00;
 600:	e4 e3       	ldi	r30, 0x34	; 52
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	10 82       	st	Z, r1
 606:	39 c0       	rjmp	.+114    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;

        case Port_D:
            DDRD = 0x00;
 608:	e1 e3       	ldi	r30, 0x31	; 49
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	10 82       	st	Z, r1
 60e:	35 c0       	rjmp	.+106    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;
        }

    else if (direction == Output)
 610:	8a 81       	ldd	r24, Y+2	; 0x02
 612:	81 30       	cpi	r24, 0x01	; 1
 614:	91 f5       	brne	.+100    	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
        switch (port)
 616:	89 81       	ldd	r24, Y+1	; 0x01
 618:	28 2f       	mov	r18, r24
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	3c 83       	std	Y+4, r19	; 0x04
 61e:	2b 83       	std	Y+3, r18	; 0x03
 620:	8b 81       	ldd	r24, Y+3	; 0x03
 622:	9c 81       	ldd	r25, Y+4	; 0x04
 624:	81 30       	cpi	r24, 0x01	; 1
 626:	91 05       	cpc	r25, r1
 628:	d1 f0       	breq	.+52     	; 0x65e <DIO_Vid_Set_Port_Direction+0xc4>
 62a:	2b 81       	ldd	r18, Y+3	; 0x03
 62c:	3c 81       	ldd	r19, Y+4	; 0x04
 62e:	22 30       	cpi	r18, 0x02	; 2
 630:	31 05       	cpc	r19, r1
 632:	2c f4       	brge	.+10     	; 0x63e <DIO_Vid_Set_Port_Direction+0xa4>
 634:	8b 81       	ldd	r24, Y+3	; 0x03
 636:	9c 81       	ldd	r25, Y+4	; 0x04
 638:	00 97       	sbiw	r24, 0x00	; 0
 63a:	61 f0       	breq	.+24     	; 0x654 <DIO_Vid_Set_Port_Direction+0xba>
 63c:	1e c0       	rjmp	.+60     	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
 63e:	2b 81       	ldd	r18, Y+3	; 0x03
 640:	3c 81       	ldd	r19, Y+4	; 0x04
 642:	22 30       	cpi	r18, 0x02	; 2
 644:	31 05       	cpc	r19, r1
 646:	81 f0       	breq	.+32     	; 0x668 <DIO_Vid_Set_Port_Direction+0xce>
 648:	8b 81       	ldd	r24, Y+3	; 0x03
 64a:	9c 81       	ldd	r25, Y+4	; 0x04
 64c:	83 30       	cpi	r24, 0x03	; 3
 64e:	91 05       	cpc	r25, r1
 650:	81 f0       	breq	.+32     	; 0x672 <DIO_Vid_Set_Port_Direction+0xd8>
 652:	13 c0       	rjmp	.+38     	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
        {
        case Port_A:
            DDRA = 0xff;
 654:	ea e3       	ldi	r30, 0x3A	; 58
 656:	f0 e0       	ldi	r31, 0x00	; 0
 658:	8f ef       	ldi	r24, 0xFF	; 255
 65a:	80 83       	st	Z, r24
 65c:	0e c0       	rjmp	.+28     	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;

        case Port_B:
            DDRB = 0xff;
 65e:	e7 e3       	ldi	r30, 0x37	; 55
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	8f ef       	ldi	r24, 0xFF	; 255
 664:	80 83       	st	Z, r24
 666:	09 c0       	rjmp	.+18     	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;

        case Port_C:
            DDRC = 0xff;
 668:	e4 e3       	ldi	r30, 0x34	; 52
 66a:	f0 e0       	ldi	r31, 0x00	; 0
 66c:	8f ef       	ldi	r24, 0xFF	; 255
 66e:	80 83       	st	Z, r24
 670:	04 c0       	rjmp	.+8      	; 0x67a <DIO_Vid_Set_Port_Direction+0xe0>
            break;

        case Port_D:
            DDRD = 0xff;
 672:	e1 e3       	ldi	r30, 0x31	; 49
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	80 83       	st	Z, r24
            break;
        }
}
 67a:	26 96       	adiw	r28, 0x06	; 6
 67c:	0f b6       	in	r0, 0x3f	; 63
 67e:	f8 94       	cli
 680:	de bf       	out	0x3e, r29	; 62
 682:	0f be       	out	0x3f, r0	; 63
 684:	cd bf       	out	0x3d, r28	; 61
 686:	cf 91       	pop	r28
 688:	df 91       	pop	r29
 68a:	08 95       	ret

0000068c <DIO_Vid_Set_Port_Value>:

void DIO_Vid_Set_Port_Value(u8 port, u8 status)
{
 68c:	df 93       	push	r29
 68e:	cf 93       	push	r28
 690:	00 d0       	rcall	.+0      	; 0x692 <DIO_Vid_Set_Port_Value+0x6>
 692:	00 d0       	rcall	.+0      	; 0x694 <DIO_Vid_Set_Port_Value+0x8>
 694:	cd b7       	in	r28, 0x3d	; 61
 696:	de b7       	in	r29, 0x3e	; 62
 698:	89 83       	std	Y+1, r24	; 0x01
 69a:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
 69c:	89 81       	ldd	r24, Y+1	; 0x01
 69e:	28 2f       	mov	r18, r24
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	3c 83       	std	Y+4, r19	; 0x04
 6a4:	2b 83       	std	Y+3, r18	; 0x03
 6a6:	8b 81       	ldd	r24, Y+3	; 0x03
 6a8:	9c 81       	ldd	r25, Y+4	; 0x04
 6aa:	81 30       	cpi	r24, 0x01	; 1
 6ac:	91 05       	cpc	r25, r1
 6ae:	d1 f0       	breq	.+52     	; 0x6e4 <DIO_Vid_Set_Port_Value+0x58>
 6b0:	2b 81       	ldd	r18, Y+3	; 0x03
 6b2:	3c 81       	ldd	r19, Y+4	; 0x04
 6b4:	22 30       	cpi	r18, 0x02	; 2
 6b6:	31 05       	cpc	r19, r1
 6b8:	2c f4       	brge	.+10     	; 0x6c4 <DIO_Vid_Set_Port_Value+0x38>
 6ba:	8b 81       	ldd	r24, Y+3	; 0x03
 6bc:	9c 81       	ldd	r25, Y+4	; 0x04
 6be:	00 97       	sbiw	r24, 0x00	; 0
 6c0:	61 f0       	breq	.+24     	; 0x6da <DIO_Vid_Set_Port_Value+0x4e>
 6c2:	1e c0       	rjmp	.+60     	; 0x700 <DIO_Vid_Set_Port_Value+0x74>
 6c4:	2b 81       	ldd	r18, Y+3	; 0x03
 6c6:	3c 81       	ldd	r19, Y+4	; 0x04
 6c8:	22 30       	cpi	r18, 0x02	; 2
 6ca:	31 05       	cpc	r19, r1
 6cc:	81 f0       	breq	.+32     	; 0x6ee <DIO_Vid_Set_Port_Value+0x62>
 6ce:	8b 81       	ldd	r24, Y+3	; 0x03
 6d0:	9c 81       	ldd	r25, Y+4	; 0x04
 6d2:	83 30       	cpi	r24, 0x03	; 3
 6d4:	91 05       	cpc	r25, r1
 6d6:	81 f0       	breq	.+32     	; 0x6f8 <DIO_Vid_Set_Port_Value+0x6c>
 6d8:	13 c0       	rjmp	.+38     	; 0x700 <DIO_Vid_Set_Port_Value+0x74>
	{
	case Port_A:
		PORTA = status;
 6da:	eb e3       	ldi	r30, 0x3B	; 59
 6dc:	f0 e0       	ldi	r31, 0x00	; 0
 6de:	8a 81       	ldd	r24, Y+2	; 0x02
 6e0:	80 83       	st	Z, r24
 6e2:	0e c0       	rjmp	.+28     	; 0x700 <DIO_Vid_Set_Port_Value+0x74>
		break;

	case Port_B:
		PORTB = status;
 6e4:	e8 e3       	ldi	r30, 0x38	; 56
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	8a 81       	ldd	r24, Y+2	; 0x02
 6ea:	80 83       	st	Z, r24
 6ec:	09 c0       	rjmp	.+18     	; 0x700 <DIO_Vid_Set_Port_Value+0x74>
		break;

	case Port_C:
		PORTC = status;
 6ee:	e5 e3       	ldi	r30, 0x35	; 53
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	8a 81       	ldd	r24, Y+2	; 0x02
 6f4:	80 83       	st	Z, r24
 6f6:	04 c0       	rjmp	.+8      	; 0x700 <DIO_Vid_Set_Port_Value+0x74>
		break;

	case Port_D:
		PORTD = status;
 6f8:	e2 e3       	ldi	r30, 0x32	; 50
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	8a 81       	ldd	r24, Y+2	; 0x02
 6fe:	80 83       	st	Z, r24
		break;
	}
}
 700:	0f 90       	pop	r0
 702:	0f 90       	pop	r0
 704:	0f 90       	pop	r0
 706:	0f 90       	pop	r0
 708:	cf 91       	pop	r28
 70a:	df 91       	pop	r29
 70c:	08 95       	ret

0000070e <DIO_Vid_Get_Port_Value>:

void DIO_Vid_Get_Port_Value(u8 port, u8 *value)
{
 70e:	df 93       	push	r29
 710:	cf 93       	push	r28
 712:	00 d0       	rcall	.+0      	; 0x714 <DIO_Vid_Get_Port_Value+0x6>
 714:	00 d0       	rcall	.+0      	; 0x716 <DIO_Vid_Get_Port_Value+0x8>
 716:	0f 92       	push	r0
 718:	cd b7       	in	r28, 0x3d	; 61
 71a:	de b7       	in	r29, 0x3e	; 62
 71c:	89 83       	std	Y+1, r24	; 0x01
 71e:	7b 83       	std	Y+3, r23	; 0x03
 720:	6a 83       	std	Y+2, r22	; 0x02
    switch (port)
 722:	89 81       	ldd	r24, Y+1	; 0x01
 724:	28 2f       	mov	r18, r24
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	3d 83       	std	Y+5, r19	; 0x05
 72a:	2c 83       	std	Y+4, r18	; 0x04
 72c:	8c 81       	ldd	r24, Y+4	; 0x04
 72e:	9d 81       	ldd	r25, Y+5	; 0x05
 730:	81 30       	cpi	r24, 0x01	; 1
 732:	91 05       	cpc	r25, r1
 734:	e1 f0       	breq	.+56     	; 0x76e <DIO_Vid_Get_Port_Value+0x60>
 736:	2c 81       	ldd	r18, Y+4	; 0x04
 738:	3d 81       	ldd	r19, Y+5	; 0x05
 73a:	22 30       	cpi	r18, 0x02	; 2
 73c:	31 05       	cpc	r19, r1
 73e:	2c f4       	brge	.+10     	; 0x74a <DIO_Vid_Get_Port_Value+0x3c>
 740:	8c 81       	ldd	r24, Y+4	; 0x04
 742:	9d 81       	ldd	r25, Y+5	; 0x05
 744:	00 97       	sbiw	r24, 0x00	; 0
 746:	61 f0       	breq	.+24     	; 0x760 <DIO_Vid_Get_Port_Value+0x52>
 748:	26 c0       	rjmp	.+76     	; 0x796 <DIO_Vid_Get_Port_Value+0x88>
 74a:	2c 81       	ldd	r18, Y+4	; 0x04
 74c:	3d 81       	ldd	r19, Y+5	; 0x05
 74e:	22 30       	cpi	r18, 0x02	; 2
 750:	31 05       	cpc	r19, r1
 752:	a1 f0       	breq	.+40     	; 0x77c <DIO_Vid_Get_Port_Value+0x6e>
 754:	8c 81       	ldd	r24, Y+4	; 0x04
 756:	9d 81       	ldd	r25, Y+5	; 0x05
 758:	83 30       	cpi	r24, 0x03	; 3
 75a:	91 05       	cpc	r25, r1
 75c:	b1 f0       	breq	.+44     	; 0x78a <DIO_Vid_Get_Port_Value+0x7c>
 75e:	1b c0       	rjmp	.+54     	; 0x796 <DIO_Vid_Get_Port_Value+0x88>
    {
    case Port_A:
        *value = PINA;
 760:	e9 e3       	ldi	r30, 0x39	; 57
 762:	f0 e0       	ldi	r31, 0x00	; 0
 764:	80 81       	ld	r24, Z
 766:	ea 81       	ldd	r30, Y+2	; 0x02
 768:	fb 81       	ldd	r31, Y+3	; 0x03
 76a:	80 83       	st	Z, r24
 76c:	14 c0       	rjmp	.+40     	; 0x796 <DIO_Vid_Get_Port_Value+0x88>
        break;

    case Port_B:
        *value = PINB;
 76e:	e6 e3       	ldi	r30, 0x36	; 54
 770:	f0 e0       	ldi	r31, 0x00	; 0
 772:	80 81       	ld	r24, Z
 774:	ea 81       	ldd	r30, Y+2	; 0x02
 776:	fb 81       	ldd	r31, Y+3	; 0x03
 778:	80 83       	st	Z, r24
 77a:	0d c0       	rjmp	.+26     	; 0x796 <DIO_Vid_Get_Port_Value+0x88>
        break;

    case Port_C:
        *value = PINC;
 77c:	e3 e3       	ldi	r30, 0x33	; 51
 77e:	f0 e0       	ldi	r31, 0x00	; 0
 780:	80 81       	ld	r24, Z
 782:	ea 81       	ldd	r30, Y+2	; 0x02
 784:	fb 81       	ldd	r31, Y+3	; 0x03
 786:	80 83       	st	Z, r24
 788:	06 c0       	rjmp	.+12     	; 0x796 <DIO_Vid_Get_Port_Value+0x88>
        break;

    case Port_D:
        *value = PIND;
 78a:	e0 e3       	ldi	r30, 0x30	; 48
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	80 81       	ld	r24, Z
 790:	ea 81       	ldd	r30, Y+2	; 0x02
 792:	fb 81       	ldd	r31, Y+3	; 0x03
 794:	80 83       	st	Z, r24
        break;
    }
}
 796:	0f 90       	pop	r0
 798:	0f 90       	pop	r0
 79a:	0f 90       	pop	r0
 79c:	0f 90       	pop	r0
 79e:	0f 90       	pop	r0
 7a0:	cf 91       	pop	r28
 7a2:	df 91       	pop	r29
 7a4:	08 95       	ret

000007a6 <DIO_7Seg_init>:

// 7Seg
void DIO_7Seg_init(u8 port)
{
 7a6:	df 93       	push	r29
 7a8:	cf 93       	push	r28
 7aa:	00 d0       	rcall	.+0      	; 0x7ac <DIO_7Seg_init+0x6>
 7ac:	0f 92       	push	r0
 7ae:	cd b7       	in	r28, 0x3d	; 61
 7b0:	de b7       	in	r29, 0x3e	; 62
 7b2:	89 83       	std	Y+1, r24	; 0x01
	DIO_Vid_Set_Port_Value(port, 0x3F);
 7b4:	89 81       	ldd	r24, Y+1	; 0x01
 7b6:	6f e3       	ldi	r22, 0x3F	; 63
 7b8:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>

	switch (port)
 7bc:	89 81       	ldd	r24, Y+1	; 0x01
 7be:	28 2f       	mov	r18, r24
 7c0:	30 e0       	ldi	r19, 0x00	; 0
 7c2:	3b 83       	std	Y+3, r19	; 0x03
 7c4:	2a 83       	std	Y+2, r18	; 0x02
 7c6:	8a 81       	ldd	r24, Y+2	; 0x02
 7c8:	9b 81       	ldd	r25, Y+3	; 0x03
 7ca:	81 30       	cpi	r24, 0x01	; 1
 7cc:	91 05       	cpc	r25, r1
 7ce:	c9 f0       	breq	.+50     	; 0x802 <DIO_7Seg_init+0x5c>
 7d0:	2a 81       	ldd	r18, Y+2	; 0x02
 7d2:	3b 81       	ldd	r19, Y+3	; 0x03
 7d4:	22 30       	cpi	r18, 0x02	; 2
 7d6:	31 05       	cpc	r19, r1
 7d8:	2c f4       	brge	.+10     	; 0x7e4 <DIO_7Seg_init+0x3e>
 7da:	8a 81       	ldd	r24, Y+2	; 0x02
 7dc:	9b 81       	ldd	r25, Y+3	; 0x03
 7de:	00 97       	sbiw	r24, 0x00	; 0
 7e0:	61 f0       	breq	.+24     	; 0x7fa <DIO_7Seg_init+0x54>
 7e2:	1a c0       	rjmp	.+52     	; 0x818 <DIO_7Seg_init+0x72>
 7e4:	2a 81       	ldd	r18, Y+2	; 0x02
 7e6:	3b 81       	ldd	r19, Y+3	; 0x03
 7e8:	22 30       	cpi	r18, 0x02	; 2
 7ea:	31 05       	cpc	r19, r1
 7ec:	71 f0       	breq	.+28     	; 0x80a <DIO_7Seg_init+0x64>
 7ee:	8a 81       	ldd	r24, Y+2	; 0x02
 7f0:	9b 81       	ldd	r25, Y+3	; 0x03
 7f2:	83 30       	cpi	r24, 0x03	; 3
 7f4:	91 05       	cpc	r25, r1
 7f6:	69 f0       	breq	.+26     	; 0x812 <DIO_7Seg_init+0x6c>
 7f8:	0f c0       	rjmp	.+30     	; 0x818 <DIO_7Seg_init+0x72>
	{
		case Port_A:
			Seg = 'A';
 7fa:	81 e4       	ldi	r24, 0x41	; 65
 7fc:	80 93 60 00 	sts	0x0060, r24
 800:	0b c0       	rjmp	.+22     	; 0x818 <DIO_7Seg_init+0x72>
			break;
		case Port_B:
			Seg = 'B';
 802:	82 e4       	ldi	r24, 0x42	; 66
 804:	80 93 60 00 	sts	0x0060, r24
 808:	07 c0       	rjmp	.+14     	; 0x818 <DIO_7Seg_init+0x72>
			break;
		case Port_C:
			Seg = 'C';
 80a:	83 e4       	ldi	r24, 0x43	; 67
 80c:	80 93 60 00 	sts	0x0060, r24
 810:	03 c0       	rjmp	.+6      	; 0x818 <DIO_7Seg_init+0x72>
			break;
		case Port_D:
			Seg = 'D';
 812:	84 e4       	ldi	r24, 0x44	; 68
 814:	80 93 60 00 	sts	0x0060, r24
			break;
	}
}
 818:	0f 90       	pop	r0
 81a:	0f 90       	pop	r0
 81c:	0f 90       	pop	r0
 81e:	cf 91       	pop	r28
 820:	df 91       	pop	r29
 822:	08 95       	ret

00000824 <DIO_7Seg_Write_Number>:
 1 1 1 1 1 1 1 : 8 : 0x7F
 1 1 0 1 1 1 1 : 9 : 0x6F
*/

void DIO_7Seg_Write_Number(u8 num)
{
 824:	df 93       	push	r29
 826:	cf 93       	push	r28
 828:	cd b7       	in	r28, 0x3d	; 61
 82a:	de b7       	in	r29, 0x3e	; 62
 82c:	62 97       	sbiw	r28, 0x12	; 18
 82e:	0f b6       	in	r0, 0x3f	; 63
 830:	f8 94       	cli
 832:	de bf       	out	0x3e, r29	; 62
 834:	0f be       	out	0x3f, r0	; 63
 836:	cd bf       	out	0x3d, r28	; 61
 838:	8b 87       	std	Y+11, r24	; 0x0b
    u8 numers[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
 83a:	9e 01       	movw	r18, r28
 83c:	2f 5f       	subi	r18, 0xFF	; 255
 83e:	3f 4f       	sbci	r19, 0xFF	; 255
 840:	3f 87       	std	Y+15, r19	; 0x0f
 842:	2e 87       	std	Y+14, r18	; 0x0e
 844:	81 e6       	ldi	r24, 0x61	; 97
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	99 8b       	std	Y+17, r25	; 0x11
 84a:	88 8b       	std	Y+16, r24	; 0x10
 84c:	9a e0       	ldi	r25, 0x0A	; 10
 84e:	9a 8b       	std	Y+18, r25	; 0x12
 850:	e8 89       	ldd	r30, Y+16	; 0x10
 852:	f9 89       	ldd	r31, Y+17	; 0x11
 854:	00 80       	ld	r0, Z
 856:	28 89       	ldd	r18, Y+16	; 0x10
 858:	39 89       	ldd	r19, Y+17	; 0x11
 85a:	2f 5f       	subi	r18, 0xFF	; 255
 85c:	3f 4f       	sbci	r19, 0xFF	; 255
 85e:	39 8b       	std	Y+17, r19	; 0x11
 860:	28 8b       	std	Y+16, r18	; 0x10
 862:	ee 85       	ldd	r30, Y+14	; 0x0e
 864:	ff 85       	ldd	r31, Y+15	; 0x0f
 866:	00 82       	st	Z, r0
 868:	2e 85       	ldd	r18, Y+14	; 0x0e
 86a:	3f 85       	ldd	r19, Y+15	; 0x0f
 86c:	2f 5f       	subi	r18, 0xFF	; 255
 86e:	3f 4f       	sbci	r19, 0xFF	; 255
 870:	3f 87       	std	Y+15, r19	; 0x0f
 872:	2e 87       	std	Y+14, r18	; 0x0e
 874:	3a 89       	ldd	r19, Y+18	; 0x12
 876:	31 50       	subi	r19, 0x01	; 1
 878:	3a 8b       	std	Y+18, r19	; 0x12
 87a:	8a 89       	ldd	r24, Y+18	; 0x12
 87c:	88 23       	and	r24, r24
 87e:	41 f7       	brne	.-48     	; 0x850 <DIO_7Seg_Write_Number+0x2c>

    switch (Seg)
 880:	80 91 60 00 	lds	r24, 0x0060
 884:	e8 2f       	mov	r30, r24
 886:	f0 e0       	ldi	r31, 0x00	; 0
 888:	fd 87       	std	Y+13, r31	; 0x0d
 88a:	ec 87       	std	Y+12, r30	; 0x0c
 88c:	2c 85       	ldd	r18, Y+12	; 0x0c
 88e:	3d 85       	ldd	r19, Y+13	; 0x0d
 890:	22 34       	cpi	r18, 0x42	; 66
 892:	31 05       	cpc	r19, r1
 894:	21 f1       	breq	.+72     	; 0x8de <DIO_7Seg_Write_Number+0xba>
 896:	8c 85       	ldd	r24, Y+12	; 0x0c
 898:	9d 85       	ldd	r25, Y+13	; 0x0d
 89a:	83 34       	cpi	r24, 0x43	; 67
 89c:	91 05       	cpc	r25, r1
 89e:	34 f4       	brge	.+12     	; 0x8ac <DIO_7Seg_Write_Number+0x88>
 8a0:	ec 85       	ldd	r30, Y+12	; 0x0c
 8a2:	fd 85       	ldd	r31, Y+13	; 0x0d
 8a4:	e1 34       	cpi	r30, 0x41	; 65
 8a6:	f1 05       	cpc	r31, r1
 8a8:	61 f0       	breq	.+24     	; 0x8c2 <DIO_7Seg_Write_Number+0x9e>
 8aa:	42 c0       	rjmp	.+132    	; 0x930 <DIO_7Seg_Write_Number+0x10c>
 8ac:	2c 85       	ldd	r18, Y+12	; 0x0c
 8ae:	3d 85       	ldd	r19, Y+13	; 0x0d
 8b0:	23 34       	cpi	r18, 0x43	; 67
 8b2:	31 05       	cpc	r19, r1
 8b4:	11 f1       	breq	.+68     	; 0x8fa <DIO_7Seg_Write_Number+0xd6>
 8b6:	8c 85       	ldd	r24, Y+12	; 0x0c
 8b8:	9d 85       	ldd	r25, Y+13	; 0x0d
 8ba:	84 34       	cpi	r24, 0x44	; 68
 8bc:	91 05       	cpc	r25, r1
 8be:	59 f1       	breq	.+86     	; 0x916 <DIO_7Seg_Write_Number+0xf2>
 8c0:	37 c0       	rjmp	.+110    	; 0x930 <DIO_7Seg_Write_Number+0x10c>
	{
		case 'A':
			DIO_Vid_Set_Port_Value(Port_A, numers[num]);
 8c2:	8b 85       	ldd	r24, Y+11	; 0x0b
 8c4:	28 2f       	mov	r18, r24
 8c6:	30 e0       	ldi	r19, 0x00	; 0
 8c8:	ce 01       	movw	r24, r28
 8ca:	01 96       	adiw	r24, 0x01	; 1
 8cc:	fc 01       	movw	r30, r24
 8ce:	e2 0f       	add	r30, r18
 8d0:	f3 1f       	adc	r31, r19
 8d2:	90 81       	ld	r25, Z
 8d4:	80 e0       	ldi	r24, 0x00	; 0
 8d6:	69 2f       	mov	r22, r25
 8d8:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
 8dc:	29 c0       	rjmp	.+82     	; 0x930 <DIO_7Seg_Write_Number+0x10c>
			break;
		case 'B':
			DIO_Vid_Set_Port_Value(Port_B, numers[num]);
 8de:	8b 85       	ldd	r24, Y+11	; 0x0b
 8e0:	28 2f       	mov	r18, r24
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	ce 01       	movw	r24, r28
 8e6:	01 96       	adiw	r24, 0x01	; 1
 8e8:	fc 01       	movw	r30, r24
 8ea:	e2 0f       	add	r30, r18
 8ec:	f3 1f       	adc	r31, r19
 8ee:	90 81       	ld	r25, Z
 8f0:	81 e0       	ldi	r24, 0x01	; 1
 8f2:	69 2f       	mov	r22, r25
 8f4:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
 8f8:	1b c0       	rjmp	.+54     	; 0x930 <DIO_7Seg_Write_Number+0x10c>
			break;
		case 'C':
			DIO_Vid_Set_Port_Value(Port_C, numers[num]);
 8fa:	8b 85       	ldd	r24, Y+11	; 0x0b
 8fc:	28 2f       	mov	r18, r24
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	ce 01       	movw	r24, r28
 902:	01 96       	adiw	r24, 0x01	; 1
 904:	fc 01       	movw	r30, r24
 906:	e2 0f       	add	r30, r18
 908:	f3 1f       	adc	r31, r19
 90a:	90 81       	ld	r25, Z
 90c:	82 e0       	ldi	r24, 0x02	; 2
 90e:	69 2f       	mov	r22, r25
 910:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
 914:	0d c0       	rjmp	.+26     	; 0x930 <DIO_7Seg_Write_Number+0x10c>
			break;
		case 'D':
			DIO_Vid_Set_Port_Value(Port_D, numers[num]);
 916:	8b 85       	ldd	r24, Y+11	; 0x0b
 918:	28 2f       	mov	r18, r24
 91a:	30 e0       	ldi	r19, 0x00	; 0
 91c:	ce 01       	movw	r24, r28
 91e:	01 96       	adiw	r24, 0x01	; 1
 920:	fc 01       	movw	r30, r24
 922:	e2 0f       	add	r30, r18
 924:	f3 1f       	adc	r31, r19
 926:	90 81       	ld	r25, Z
 928:	83 e0       	ldi	r24, 0x03	; 3
 92a:	69 2f       	mov	r22, r25
 92c:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
			break;
	}

}
 930:	62 96       	adiw	r28, 0x12	; 18
 932:	0f b6       	in	r0, 0x3f	; 63
 934:	f8 94       	cli
 936:	de bf       	out	0x3e, r29	; 62
 938:	0f be       	out	0x3f, r0	; 63
 93a:	cd bf       	out	0x3d, r28	; 61
 93c:	cf 91       	pop	r28
 93e:	df 91       	pop	r29
 940:	08 95       	ret

00000942 <DIO_7Seg_Write_Value>:

void DIO_7Seg_Write_Value(u8 value)
{
 942:	df 93       	push	r29
 944:	cf 93       	push	r28
 946:	00 d0       	rcall	.+0      	; 0x948 <DIO_7Seg_Write_Value+0x6>
 948:	0f 92       	push	r0
 94a:	cd b7       	in	r28, 0x3d	; 61
 94c:	de b7       	in	r29, 0x3e	; 62
 94e:	89 83       	std	Y+1, r24	; 0x01
	switch (Seg)
 950:	80 91 60 00 	lds	r24, 0x0060
 954:	28 2f       	mov	r18, r24
 956:	30 e0       	ldi	r19, 0x00	; 0
 958:	3b 83       	std	Y+3, r19	; 0x03
 95a:	2a 83       	std	Y+2, r18	; 0x02
 95c:	8a 81       	ldd	r24, Y+2	; 0x02
 95e:	9b 81       	ldd	r25, Y+3	; 0x03
 960:	82 34       	cpi	r24, 0x42	; 66
 962:	91 05       	cpc	r25, r1
 964:	d9 f0       	breq	.+54     	; 0x99c <DIO_7Seg_Write_Value+0x5a>
 966:	2a 81       	ldd	r18, Y+2	; 0x02
 968:	3b 81       	ldd	r19, Y+3	; 0x03
 96a:	23 34       	cpi	r18, 0x43	; 67
 96c:	31 05       	cpc	r19, r1
 96e:	34 f4       	brge	.+12     	; 0x97c <DIO_7Seg_Write_Value+0x3a>
 970:	8a 81       	ldd	r24, Y+2	; 0x02
 972:	9b 81       	ldd	r25, Y+3	; 0x03
 974:	81 34       	cpi	r24, 0x41	; 65
 976:	91 05       	cpc	r25, r1
 978:	61 f0       	breq	.+24     	; 0x992 <DIO_7Seg_Write_Value+0x50>
 97a:	1e c0       	rjmp	.+60     	; 0x9b8 <DIO_7Seg_Write_Value+0x76>
 97c:	2a 81       	ldd	r18, Y+2	; 0x02
 97e:	3b 81       	ldd	r19, Y+3	; 0x03
 980:	23 34       	cpi	r18, 0x43	; 67
 982:	31 05       	cpc	r19, r1
 984:	81 f0       	breq	.+32     	; 0x9a6 <DIO_7Seg_Write_Value+0x64>
 986:	8a 81       	ldd	r24, Y+2	; 0x02
 988:	9b 81       	ldd	r25, Y+3	; 0x03
 98a:	84 34       	cpi	r24, 0x44	; 68
 98c:	91 05       	cpc	r25, r1
 98e:	81 f0       	breq	.+32     	; 0x9b0 <DIO_7Seg_Write_Value+0x6e>
 990:	13 c0       	rjmp	.+38     	; 0x9b8 <DIO_7Seg_Write_Value+0x76>
	{
		case 'A':
			DIO_Vid_Set_Port_Value(Port_A, value);
 992:	80 e0       	ldi	r24, 0x00	; 0
 994:	69 81       	ldd	r22, Y+1	; 0x01
 996:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
 99a:	0e c0       	rjmp	.+28     	; 0x9b8 <DIO_7Seg_Write_Value+0x76>
			break;
		case 'B':
			DIO_Vid_Set_Port_Value(Port_B, value);
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	69 81       	ldd	r22, Y+1	; 0x01
 9a0:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
 9a4:	09 c0       	rjmp	.+18     	; 0x9b8 <DIO_7Seg_Write_Value+0x76>
			break;
		case 'C':
			DIO_Vid_Set_Port_Value(Port_C, value);
 9a6:	82 e0       	ldi	r24, 0x02	; 2
 9a8:	69 81       	ldd	r22, Y+1	; 0x01
 9aa:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
 9ae:	04 c0       	rjmp	.+8      	; 0x9b8 <DIO_7Seg_Write_Value+0x76>
			break;
		case 'D':
			DIO_Vid_Set_Port_Value(Port_D, value);
 9b0:	83 e0       	ldi	r24, 0x03	; 3
 9b2:	69 81       	ldd	r22, Y+1	; 0x01
 9b4:	0e 94 46 03 	call	0x68c	; 0x68c <DIO_Vid_Set_Port_Value>
			break;
	}
}
 9b8:	0f 90       	pop	r0
 9ba:	0f 90       	pop	r0
 9bc:	0f 90       	pop	r0
 9be:	cf 91       	pop	r28
 9c0:	df 91       	pop	r29
 9c2:	08 95       	ret

000009c4 <DIO_7Seg_Write_Char>:
 1 1 1 1 1 1 1 : B : 0xFF
 1 1 1 1 1 0 0 : b : 0xFC
*/

void DIO_7Seg_Write_Char(u8 ch)
{
 9c4:	df 93       	push	r29
 9c6:	cf 93       	push	r28
 9c8:	00 d0       	rcall	.+0      	; 0x9ca <DIO_7Seg_Write_Char+0x6>
 9ca:	00 d0       	rcall	.+0      	; 0x9cc <DIO_7Seg_Write_Char+0x8>
 9cc:	cd b7       	in	r28, 0x3d	; 61
 9ce:	de b7       	in	r29, 0x3e	; 62
 9d0:	8a 83       	std	Y+2, r24	; 0x02
	u8 value = 0x00;
 9d2:	19 82       	std	Y+1, r1	; 0x01

	switch (ch)
 9d4:	8a 81       	ldd	r24, Y+2	; 0x02
 9d6:	28 2f       	mov	r18, r24
 9d8:	30 e0       	ldi	r19, 0x00	; 0
 9da:	3c 83       	std	Y+4, r19	; 0x04
 9dc:	2b 83       	std	Y+3, r18	; 0x03
 9de:	8b 81       	ldd	r24, Y+3	; 0x03
 9e0:	9c 81       	ldd	r25, Y+4	; 0x04
 9e2:	82 34       	cpi	r24, 0x42	; 66
 9e4:	91 05       	cpc	r25, r1
 9e6:	e1 f0       	breq	.+56     	; 0xa20 <DIO_7Seg_Write_Char+0x5c>
 9e8:	2b 81       	ldd	r18, Y+3	; 0x03
 9ea:	3c 81       	ldd	r19, Y+4	; 0x04
 9ec:	23 34       	cpi	r18, 0x43	; 67
 9ee:	31 05       	cpc	r19, r1
 9f0:	34 f4       	brge	.+12     	; 0x9fe <DIO_7Seg_Write_Char+0x3a>
 9f2:	8b 81       	ldd	r24, Y+3	; 0x03
 9f4:	9c 81       	ldd	r25, Y+4	; 0x04
 9f6:	81 34       	cpi	r24, 0x41	; 65
 9f8:	91 05       	cpc	r25, r1
 9fa:	61 f0       	breq	.+24     	; 0xa14 <DIO_7Seg_Write_Char+0x50>
 9fc:	16 c0       	rjmp	.+44     	; 0xa2a <DIO_7Seg_Write_Char+0x66>
 9fe:	2b 81       	ldd	r18, Y+3	; 0x03
 a00:	3c 81       	ldd	r19, Y+4	; 0x04
 a02:	21 36       	cpi	r18, 0x61	; 97
 a04:	31 05       	cpc	r19, r1
 a06:	49 f0       	breq	.+18     	; 0xa1a <DIO_7Seg_Write_Char+0x56>
 a08:	8b 81       	ldd	r24, Y+3	; 0x03
 a0a:	9c 81       	ldd	r25, Y+4	; 0x04
 a0c:	82 36       	cpi	r24, 0x62	; 98
 a0e:	91 05       	cpc	r25, r1
 a10:	51 f0       	breq	.+20     	; 0xa26 <DIO_7Seg_Write_Char+0x62>
 a12:	0b c0       	rjmp	.+22     	; 0xa2a <DIO_7Seg_Write_Char+0x66>
	{
		case 'A':
			value  = 0x77;
 a14:	87 e7       	ldi	r24, 0x77	; 119
 a16:	89 83       	std	Y+1, r24	; 0x01
 a18:	08 c0       	rjmp	.+16     	; 0xa2a <DIO_7Seg_Write_Char+0x66>
			break;
		case 'a':
			value  = 0x67;
 a1a:	87 e6       	ldi	r24, 0x67	; 103
 a1c:	89 83       	std	Y+1, r24	; 0x01
 a1e:	05 c0       	rjmp	.+10     	; 0xa2a <DIO_7Seg_Write_Char+0x66>
			break;
		case 'B':
			value  = 0xFF;
 a20:	8f ef       	ldi	r24, 0xFF	; 255
 a22:	89 83       	std	Y+1, r24	; 0x01
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <DIO_7Seg_Write_Char+0x66>
			break;
		case 'b':
			value  = 0xFC;
 a26:	8c ef       	ldi	r24, 0xFC	; 252
 a28:	89 83       	std	Y+1, r24	; 0x01
			break;
	}

	DIO_7Seg_Write_Value(value);
 a2a:	89 81       	ldd	r24, Y+1	; 0x01
 a2c:	0e 94 a1 04 	call	0x942	; 0x942 <DIO_7Seg_Write_Value>
}
 a30:	0f 90       	pop	r0
 a32:	0f 90       	pop	r0
 a34:	0f 90       	pop	r0
 a36:	0f 90       	pop	r0
 a38:	cf 91       	pop	r28
 a3a:	df 91       	pop	r29
 a3c:	08 95       	ret

00000a3e <EX_INT0_INIT>:
// 3: Rissing Edge
// ******************

// Initilization:
void EX_INT0_INIT(u8 mode)
{
 a3e:	df 93       	push	r29
 a40:	cf 93       	push	r28
 a42:	00 d0       	rcall	.+0      	; 0xa44 <EX_INT0_INIT+0x6>
 a44:	0f 92       	push	r0
 a46:	cd b7       	in	r28, 0x3d	; 61
 a48:	de b7       	in	r29, 0x3e	; 62
 a4a:	89 83       	std	Y+1, r24	; 0x01
    // INT0 Enable
    SET_BIT(GICR, GICR_INT0);
 a4c:	ab e5       	ldi	r26, 0x5B	; 91
 a4e:	b0 e0       	ldi	r27, 0x00	; 0
 a50:	eb e5       	ldi	r30, 0x5B	; 91
 a52:	f0 e0       	ldi	r31, 0x00	; 0
 a54:	80 81       	ld	r24, Z
 a56:	80 64       	ori	r24, 0x40	; 64
 a58:	8c 93       	st	X, r24

    switch (mode)
 a5a:	89 81       	ldd	r24, Y+1	; 0x01
 a5c:	28 2f       	mov	r18, r24
 a5e:	30 e0       	ldi	r19, 0x00	; 0
 a60:	3b 83       	std	Y+3, r19	; 0x03
 a62:	2a 83       	std	Y+2, r18	; 0x02
 a64:	8a 81       	ldd	r24, Y+2	; 0x02
 a66:	9b 81       	ldd	r25, Y+3	; 0x03
 a68:	81 30       	cpi	r24, 0x01	; 1
 a6a:	91 05       	cpc	r25, r1
 a6c:	21 f1       	breq	.+72     	; 0xab6 <EX_INT0_INIT+0x78>
 a6e:	2a 81       	ldd	r18, Y+2	; 0x02
 a70:	3b 81       	ldd	r19, Y+3	; 0x03
 a72:	22 30       	cpi	r18, 0x02	; 2
 a74:	31 05       	cpc	r19, r1
 a76:	2c f4       	brge	.+10     	; 0xa82 <EX_INT0_INIT+0x44>
 a78:	8a 81       	ldd	r24, Y+2	; 0x02
 a7a:	9b 81       	ldd	r25, Y+3	; 0x03
 a7c:	00 97       	sbiw	r24, 0x00	; 0
 a7e:	61 f0       	breq	.+24     	; 0xa98 <EX_INT0_INIT+0x5a>
 a80:	46 c0       	rjmp	.+140    	; 0xb0e <EX_INT0_INIT+0xd0>
 a82:	2a 81       	ldd	r18, Y+2	; 0x02
 a84:	3b 81       	ldd	r19, Y+3	; 0x03
 a86:	22 30       	cpi	r18, 0x02	; 2
 a88:	31 05       	cpc	r19, r1
 a8a:	21 f1       	breq	.+72     	; 0xad4 <EX_INT0_INIT+0x96>
 a8c:	8a 81       	ldd	r24, Y+2	; 0x02
 a8e:	9b 81       	ldd	r25, Y+3	; 0x03
 a90:	83 30       	cpi	r24, 0x03	; 3
 a92:	91 05       	cpc	r25, r1
 a94:	71 f1       	breq	.+92     	; 0xaf2 <EX_INT0_INIT+0xb4>
 a96:	3b c0       	rjmp	.+118    	; 0xb0e <EX_INT0_INIT+0xd0>
    {
    case 0:
        CLR_BIT(MCUCR, MCUCR_ISC00);
 a98:	a5 e5       	ldi	r26, 0x55	; 85
 a9a:	b0 e0       	ldi	r27, 0x00	; 0
 a9c:	e5 e5       	ldi	r30, 0x55	; 85
 a9e:	f0 e0       	ldi	r31, 0x00	; 0
 aa0:	80 81       	ld	r24, Z
 aa2:	8e 7f       	andi	r24, 0xFE	; 254
 aa4:	8c 93       	st	X, r24
        CLR_BIT(MCUCR, MCUCR_ISC01);
 aa6:	a5 e5       	ldi	r26, 0x55	; 85
 aa8:	b0 e0       	ldi	r27, 0x00	; 0
 aaa:	e5 e5       	ldi	r30, 0x55	; 85
 aac:	f0 e0       	ldi	r31, 0x00	; 0
 aae:	80 81       	ld	r24, Z
 ab0:	8d 7f       	andi	r24, 0xFD	; 253
 ab2:	8c 93       	st	X, r24
 ab4:	2c c0       	rjmp	.+88     	; 0xb0e <EX_INT0_INIT+0xd0>
        break;

    case 1:
        SET_BIT(MCUCR, MCUCR_ISC00);
 ab6:	a5 e5       	ldi	r26, 0x55	; 85
 ab8:	b0 e0       	ldi	r27, 0x00	; 0
 aba:	e5 e5       	ldi	r30, 0x55	; 85
 abc:	f0 e0       	ldi	r31, 0x00	; 0
 abe:	80 81       	ld	r24, Z
 ac0:	81 60       	ori	r24, 0x01	; 1
 ac2:	8c 93       	st	X, r24
        CLR_BIT(MCUCR, MCUCR_ISC01);
 ac4:	a5 e5       	ldi	r26, 0x55	; 85
 ac6:	b0 e0       	ldi	r27, 0x00	; 0
 ac8:	e5 e5       	ldi	r30, 0x55	; 85
 aca:	f0 e0       	ldi	r31, 0x00	; 0
 acc:	80 81       	ld	r24, Z
 ace:	8d 7f       	andi	r24, 0xFD	; 253
 ad0:	8c 93       	st	X, r24
 ad2:	1d c0       	rjmp	.+58     	; 0xb0e <EX_INT0_INIT+0xd0>
        break;

    case 2:
        CLR_BIT(MCUCR, MCUCR_ISC00);
 ad4:	a5 e5       	ldi	r26, 0x55	; 85
 ad6:	b0 e0       	ldi	r27, 0x00	; 0
 ad8:	e5 e5       	ldi	r30, 0x55	; 85
 ada:	f0 e0       	ldi	r31, 0x00	; 0
 adc:	80 81       	ld	r24, Z
 ade:	8e 7f       	andi	r24, 0xFE	; 254
 ae0:	8c 93       	st	X, r24
        SET_BIT(MCUCR, MCUCR_ISC01);
 ae2:	a5 e5       	ldi	r26, 0x55	; 85
 ae4:	b0 e0       	ldi	r27, 0x00	; 0
 ae6:	e5 e5       	ldi	r30, 0x55	; 85
 ae8:	f0 e0       	ldi	r31, 0x00	; 0
 aea:	80 81       	ld	r24, Z
 aec:	82 60       	ori	r24, 0x02	; 2
 aee:	8c 93       	st	X, r24
 af0:	0e c0       	rjmp	.+28     	; 0xb0e <EX_INT0_INIT+0xd0>
        break;

    case 3:
        SET_BIT(MCUCR, MCUCR_ISC00);
 af2:	a5 e5       	ldi	r26, 0x55	; 85
 af4:	b0 e0       	ldi	r27, 0x00	; 0
 af6:	e5 e5       	ldi	r30, 0x55	; 85
 af8:	f0 e0       	ldi	r31, 0x00	; 0
 afa:	80 81       	ld	r24, Z
 afc:	81 60       	ori	r24, 0x01	; 1
 afe:	8c 93       	st	X, r24
        SET_BIT(MCUCR, MCUCR_ISC01);
 b00:	a5 e5       	ldi	r26, 0x55	; 85
 b02:	b0 e0       	ldi	r27, 0x00	; 0
 b04:	e5 e5       	ldi	r30, 0x55	; 85
 b06:	f0 e0       	ldi	r31, 0x00	; 0
 b08:	80 81       	ld	r24, Z
 b0a:	82 60       	ori	r24, 0x02	; 2
 b0c:	8c 93       	st	X, r24
        break;
    }
}
 b0e:	0f 90       	pop	r0
 b10:	0f 90       	pop	r0
 b12:	0f 90       	pop	r0
 b14:	cf 91       	pop	r28
 b16:	df 91       	pop	r29
 b18:	08 95       	ret

00000b1a <EX_INT1_INIT>:

void EX_INT1_INIT(u8 mode)
{
 b1a:	df 93       	push	r29
 b1c:	cf 93       	push	r28
 b1e:	00 d0       	rcall	.+0      	; 0xb20 <EX_INT1_INIT+0x6>
 b20:	0f 92       	push	r0
 b22:	cd b7       	in	r28, 0x3d	; 61
 b24:	de b7       	in	r29, 0x3e	; 62
 b26:	89 83       	std	Y+1, r24	; 0x01
    // INT1 Enable
    SET_BIT(GICR, GICR_INT1);
 b28:	ab e5       	ldi	r26, 0x5B	; 91
 b2a:	b0 e0       	ldi	r27, 0x00	; 0
 b2c:	eb e5       	ldi	r30, 0x5B	; 91
 b2e:	f0 e0       	ldi	r31, 0x00	; 0
 b30:	80 81       	ld	r24, Z
 b32:	80 68       	ori	r24, 0x80	; 128
 b34:	8c 93       	st	X, r24

    switch (mode)
 b36:	89 81       	ldd	r24, Y+1	; 0x01
 b38:	28 2f       	mov	r18, r24
 b3a:	30 e0       	ldi	r19, 0x00	; 0
 b3c:	3b 83       	std	Y+3, r19	; 0x03
 b3e:	2a 83       	std	Y+2, r18	; 0x02
 b40:	8a 81       	ldd	r24, Y+2	; 0x02
 b42:	9b 81       	ldd	r25, Y+3	; 0x03
 b44:	81 30       	cpi	r24, 0x01	; 1
 b46:	91 05       	cpc	r25, r1
 b48:	21 f1       	breq	.+72     	; 0xb92 <EX_INT1_INIT+0x78>
 b4a:	2a 81       	ldd	r18, Y+2	; 0x02
 b4c:	3b 81       	ldd	r19, Y+3	; 0x03
 b4e:	22 30       	cpi	r18, 0x02	; 2
 b50:	31 05       	cpc	r19, r1
 b52:	2c f4       	brge	.+10     	; 0xb5e <EX_INT1_INIT+0x44>
 b54:	8a 81       	ldd	r24, Y+2	; 0x02
 b56:	9b 81       	ldd	r25, Y+3	; 0x03
 b58:	00 97       	sbiw	r24, 0x00	; 0
 b5a:	61 f0       	breq	.+24     	; 0xb74 <EX_INT1_INIT+0x5a>
 b5c:	46 c0       	rjmp	.+140    	; 0xbea <EX_INT1_INIT+0xd0>
 b5e:	2a 81       	ldd	r18, Y+2	; 0x02
 b60:	3b 81       	ldd	r19, Y+3	; 0x03
 b62:	22 30       	cpi	r18, 0x02	; 2
 b64:	31 05       	cpc	r19, r1
 b66:	21 f1       	breq	.+72     	; 0xbb0 <EX_INT1_INIT+0x96>
 b68:	8a 81       	ldd	r24, Y+2	; 0x02
 b6a:	9b 81       	ldd	r25, Y+3	; 0x03
 b6c:	83 30       	cpi	r24, 0x03	; 3
 b6e:	91 05       	cpc	r25, r1
 b70:	71 f1       	breq	.+92     	; 0xbce <EX_INT1_INIT+0xb4>
 b72:	3b c0       	rjmp	.+118    	; 0xbea <EX_INT1_INIT+0xd0>
    {
    case 0:
        CLR_BIT(MCUCR, MCUCR_ISC10);
 b74:	a5 e5       	ldi	r26, 0x55	; 85
 b76:	b0 e0       	ldi	r27, 0x00	; 0
 b78:	e5 e5       	ldi	r30, 0x55	; 85
 b7a:	f0 e0       	ldi	r31, 0x00	; 0
 b7c:	80 81       	ld	r24, Z
 b7e:	8b 7f       	andi	r24, 0xFB	; 251
 b80:	8c 93       	st	X, r24
        CLR_BIT(MCUCR, MCUCR_ISC11);
 b82:	a5 e5       	ldi	r26, 0x55	; 85
 b84:	b0 e0       	ldi	r27, 0x00	; 0
 b86:	e5 e5       	ldi	r30, 0x55	; 85
 b88:	f0 e0       	ldi	r31, 0x00	; 0
 b8a:	80 81       	ld	r24, Z
 b8c:	87 7f       	andi	r24, 0xF7	; 247
 b8e:	8c 93       	st	X, r24
 b90:	2c c0       	rjmp	.+88     	; 0xbea <EX_INT1_INIT+0xd0>
        break;

    case 1:
        SET_BIT(MCUCR, MCUCR_ISC10);
 b92:	a5 e5       	ldi	r26, 0x55	; 85
 b94:	b0 e0       	ldi	r27, 0x00	; 0
 b96:	e5 e5       	ldi	r30, 0x55	; 85
 b98:	f0 e0       	ldi	r31, 0x00	; 0
 b9a:	80 81       	ld	r24, Z
 b9c:	84 60       	ori	r24, 0x04	; 4
 b9e:	8c 93       	st	X, r24
        CLR_BIT(MCUCR, MCUCR_ISC11);
 ba0:	a5 e5       	ldi	r26, 0x55	; 85
 ba2:	b0 e0       	ldi	r27, 0x00	; 0
 ba4:	e5 e5       	ldi	r30, 0x55	; 85
 ba6:	f0 e0       	ldi	r31, 0x00	; 0
 ba8:	80 81       	ld	r24, Z
 baa:	87 7f       	andi	r24, 0xF7	; 247
 bac:	8c 93       	st	X, r24
 bae:	1d c0       	rjmp	.+58     	; 0xbea <EX_INT1_INIT+0xd0>
        break;

    case 2:
        CLR_BIT(MCUCR, MCUCR_ISC10);
 bb0:	a5 e5       	ldi	r26, 0x55	; 85
 bb2:	b0 e0       	ldi	r27, 0x00	; 0
 bb4:	e5 e5       	ldi	r30, 0x55	; 85
 bb6:	f0 e0       	ldi	r31, 0x00	; 0
 bb8:	80 81       	ld	r24, Z
 bba:	8b 7f       	andi	r24, 0xFB	; 251
 bbc:	8c 93       	st	X, r24
        SET_BIT(MCUCR, MCUCR_ISC11);
 bbe:	a5 e5       	ldi	r26, 0x55	; 85
 bc0:	b0 e0       	ldi	r27, 0x00	; 0
 bc2:	e5 e5       	ldi	r30, 0x55	; 85
 bc4:	f0 e0       	ldi	r31, 0x00	; 0
 bc6:	80 81       	ld	r24, Z
 bc8:	88 60       	ori	r24, 0x08	; 8
 bca:	8c 93       	st	X, r24
 bcc:	0e c0       	rjmp	.+28     	; 0xbea <EX_INT1_INIT+0xd0>
        break;

    case 3:
        SET_BIT(MCUCR, MCUCR_ISC10);
 bce:	a5 e5       	ldi	r26, 0x55	; 85
 bd0:	b0 e0       	ldi	r27, 0x00	; 0
 bd2:	e5 e5       	ldi	r30, 0x55	; 85
 bd4:	f0 e0       	ldi	r31, 0x00	; 0
 bd6:	80 81       	ld	r24, Z
 bd8:	84 60       	ori	r24, 0x04	; 4
 bda:	8c 93       	st	X, r24
        SET_BIT(MCUCR, MCUCR_ISC11);
 bdc:	a5 e5       	ldi	r26, 0x55	; 85
 bde:	b0 e0       	ldi	r27, 0x00	; 0
 be0:	e5 e5       	ldi	r30, 0x55	; 85
 be2:	f0 e0       	ldi	r31, 0x00	; 0
 be4:	80 81       	ld	r24, Z
 be6:	88 60       	ori	r24, 0x08	; 8
 be8:	8c 93       	st	X, r24
        break;
    }
}
 bea:	0f 90       	pop	r0
 bec:	0f 90       	pop	r0
 bee:	0f 90       	pop	r0
 bf0:	cf 91       	pop	r28
 bf2:	df 91       	pop	r29
 bf4:	08 95       	ret

00000bf6 <EX_INT2_INIT>:

void EX_INT2_INIT(u8 mode)
{
 bf6:	df 93       	push	r29
 bf8:	cf 93       	push	r28
 bfa:	00 d0       	rcall	.+0      	; 0xbfc <EX_INT2_INIT+0x6>
 bfc:	0f 92       	push	r0
 bfe:	cd b7       	in	r28, 0x3d	; 61
 c00:	de b7       	in	r29, 0x3e	; 62
 c02:	89 83       	std	Y+1, r24	; 0x01
    // INT2 Enable
    SET_BIT(GICR, GICR_INT2);
 c04:	ab e5       	ldi	r26, 0x5B	; 91
 c06:	b0 e0       	ldi	r27, 0x00	; 0
 c08:	eb e5       	ldi	r30, 0x5B	; 91
 c0a:	f0 e0       	ldi	r31, 0x00	; 0
 c0c:	80 81       	ld	r24, Z
 c0e:	80 62       	ori	r24, 0x20	; 32
 c10:	8c 93       	st	X, r24

    // 0: failling edge
    // 1: rissing edge
    switch (mode)
 c12:	89 81       	ldd	r24, Y+1	; 0x01
 c14:	28 2f       	mov	r18, r24
 c16:	30 e0       	ldi	r19, 0x00	; 0
 c18:	3b 83       	std	Y+3, r19	; 0x03
 c1a:	2a 83       	std	Y+2, r18	; 0x02
 c1c:	8a 81       	ldd	r24, Y+2	; 0x02
 c1e:	9b 81       	ldd	r25, Y+3	; 0x03
 c20:	00 97       	sbiw	r24, 0x00	; 0
 c22:	31 f0       	breq	.+12     	; 0xc30 <EX_INT2_INIT+0x3a>
 c24:	2a 81       	ldd	r18, Y+2	; 0x02
 c26:	3b 81       	ldd	r19, Y+3	; 0x03
 c28:	21 30       	cpi	r18, 0x01	; 1
 c2a:	31 05       	cpc	r19, r1
 c2c:	49 f0       	breq	.+18     	; 0xc40 <EX_INT2_INIT+0x4a>
 c2e:	0f c0       	rjmp	.+30     	; 0xc4e <EX_INT2_INIT+0x58>
    {
    case 0:
        CLR_BIT(MCUCSR, MCUCSR_ISC2);
 c30:	a4 e5       	ldi	r26, 0x54	; 84
 c32:	b0 e0       	ldi	r27, 0x00	; 0
 c34:	e4 e5       	ldi	r30, 0x54	; 84
 c36:	f0 e0       	ldi	r31, 0x00	; 0
 c38:	80 81       	ld	r24, Z
 c3a:	8b 7f       	andi	r24, 0xFB	; 251
 c3c:	8c 93       	st	X, r24
 c3e:	07 c0       	rjmp	.+14     	; 0xc4e <EX_INT2_INIT+0x58>
        break;

    case 1:
        SET_BIT(MCUCSR, MCUCSR_ISC2);
 c40:	a4 e5       	ldi	r26, 0x54	; 84
 c42:	b0 e0       	ldi	r27, 0x00	; 0
 c44:	e4 e5       	ldi	r30, 0x54	; 84
 c46:	f0 e0       	ldi	r31, 0x00	; 0
 c48:	80 81       	ld	r24, Z
 c4a:	84 60       	ori	r24, 0x04	; 4
 c4c:	8c 93       	st	X, r24
        break;
    }
}
 c4e:	0f 90       	pop	r0
 c50:	0f 90       	pop	r0
 c52:	0f 90       	pop	r0
 c54:	cf 91       	pop	r28
 c56:	df 91       	pop	r29
 c58:	08 95       	ret

00000c5a <EX_SET_INT0>:
void (*INT1_Function_PTR)(void) = NULL;
void (*INT2_Function_PTR)(void) = NULL;

// Set Pointer:
void EX_SET_INT0(void *INT0_PTR(void))
{
 c5a:	df 93       	push	r29
 c5c:	cf 93       	push	r28
 c5e:	00 d0       	rcall	.+0      	; 0xc60 <EX_SET_INT0+0x6>
 c60:	cd b7       	in	r28, 0x3d	; 61
 c62:	de b7       	in	r29, 0x3e	; 62
 c64:	9a 83       	std	Y+2, r25	; 0x02
 c66:	89 83       	std	Y+1, r24	; 0x01
	if(INT0_PTR != NULL)
 c68:	89 81       	ldd	r24, Y+1	; 0x01
 c6a:	9a 81       	ldd	r25, Y+2	; 0x02
 c6c:	00 97       	sbiw	r24, 0x00	; 0
 c6e:	31 f0       	breq	.+12     	; 0xc7c <EX_SET_INT0+0x22>
		INT0_Function_PTR = INT0_PTR;
 c70:	89 81       	ldd	r24, Y+1	; 0x01
 c72:	9a 81       	ldd	r25, Y+2	; 0x02
 c74:	90 93 6d 00 	sts	0x006D, r25
 c78:	80 93 6c 00 	sts	0x006C, r24
}
 c7c:	0f 90       	pop	r0
 c7e:	0f 90       	pop	r0
 c80:	cf 91       	pop	r28
 c82:	df 91       	pop	r29
 c84:	08 95       	ret

00000c86 <EX_SET_INT1>:

void EX_SET_INT1(void *INT1_PTR(void))
{
 c86:	df 93       	push	r29
 c88:	cf 93       	push	r28
 c8a:	00 d0       	rcall	.+0      	; 0xc8c <EX_SET_INT1+0x6>
 c8c:	cd b7       	in	r28, 0x3d	; 61
 c8e:	de b7       	in	r29, 0x3e	; 62
 c90:	9a 83       	std	Y+2, r25	; 0x02
 c92:	89 83       	std	Y+1, r24	; 0x01
	if(INT1_PTR != NULL)
 c94:	89 81       	ldd	r24, Y+1	; 0x01
 c96:	9a 81       	ldd	r25, Y+2	; 0x02
 c98:	00 97       	sbiw	r24, 0x00	; 0
 c9a:	31 f0       	breq	.+12     	; 0xca8 <EX_SET_INT1+0x22>
		INT1_Function_PTR = INT1_PTR;
 c9c:	89 81       	ldd	r24, Y+1	; 0x01
 c9e:	9a 81       	ldd	r25, Y+2	; 0x02
 ca0:	90 93 6f 00 	sts	0x006F, r25
 ca4:	80 93 6e 00 	sts	0x006E, r24
}
 ca8:	0f 90       	pop	r0
 caa:	0f 90       	pop	r0
 cac:	cf 91       	pop	r28
 cae:	df 91       	pop	r29
 cb0:	08 95       	ret

00000cb2 <EX_SET_INT2>:

void EX_SET_INT2(void *INT2_PTR(void))
{
 cb2:	df 93       	push	r29
 cb4:	cf 93       	push	r28
 cb6:	00 d0       	rcall	.+0      	; 0xcb8 <EX_SET_INT2+0x6>
 cb8:	cd b7       	in	r28, 0x3d	; 61
 cba:	de b7       	in	r29, 0x3e	; 62
 cbc:	9a 83       	std	Y+2, r25	; 0x02
 cbe:	89 83       	std	Y+1, r24	; 0x01
	if(INT2_PTR != NULL)
 cc0:	89 81       	ldd	r24, Y+1	; 0x01
 cc2:	9a 81       	ldd	r25, Y+2	; 0x02
 cc4:	00 97       	sbiw	r24, 0x00	; 0
 cc6:	31 f0       	breq	.+12     	; 0xcd4 <EX_SET_INT2+0x22>
		INT2_Function_PTR = INT2_PTR;
 cc8:	89 81       	ldd	r24, Y+1	; 0x01
 cca:	9a 81       	ldd	r25, Y+2	; 0x02
 ccc:	90 93 71 00 	sts	0x0071, r25
 cd0:	80 93 70 00 	sts	0x0070, r24
}
 cd4:	0f 90       	pop	r0
 cd6:	0f 90       	pop	r0
 cd8:	cf 91       	pop	r28
 cda:	df 91       	pop	r29
 cdc:	08 95       	ret

00000cde <GIE_Enable>:
#include "GIE_Interface.h"
#include "GIE_Private.h"
#include "BIT_MATH.h"

void GIE_Enable()
{
 cde:	df 93       	push	r29
 ce0:	cf 93       	push	r28
 ce2:	cd b7       	in	r28, 0x3d	; 61
 ce4:	de b7       	in	r29, 0x3e	; 62
    SET_BIT(SREG, SREG_I);
 ce6:	af e5       	ldi	r26, 0x5F	; 95
 ce8:	b0 e0       	ldi	r27, 0x00	; 0
 cea:	ef e5       	ldi	r30, 0x5F	; 95
 cec:	f0 e0       	ldi	r31, 0x00	; 0
 cee:	80 81       	ld	r24, Z
 cf0:	80 68       	ori	r24, 0x80	; 128
 cf2:	8c 93       	st	X, r24
}
 cf4:	cf 91       	pop	r28
 cf6:	df 91       	pop	r29
 cf8:	08 95       	ret

00000cfa <GIE_Disable>:

void GIE_Disable()
{
 cfa:	df 93       	push	r29
 cfc:	cf 93       	push	r28
 cfe:	cd b7       	in	r28, 0x3d	; 61
 d00:	de b7       	in	r29, 0x3e	; 62
    CLR_BIT(SREG, SREG_I);
 d02:	af e5       	ldi	r26, 0x5F	; 95
 d04:	b0 e0       	ldi	r27, 0x00	; 0
 d06:	ef e5       	ldi	r30, 0x5F	; 95
 d08:	f0 e0       	ldi	r31, 0x00	; 0
 d0a:	80 81       	ld	r24, Z
 d0c:	8f 77       	andi	r24, 0x7F	; 127
 d0e:	8c 93       	st	X, r24
 d10:	cf 91       	pop	r28
 d12:	df 91       	pop	r29
 d14:	08 95       	ret

00000d16 <main>:
#include "EX_INT_Interface.h"

void Test();

int main()
{
 d16:	df 93       	push	r29
 d18:	cf 93       	push	r28
 d1a:	cd b7       	in	r28, 0x3d	; 61
 d1c:	de b7       	in	r29, 0x3e	; 62
	DIO_Vid_Set_Pin_Direction(Port_D, Pin2, Input);
 d1e:	83 e0       	ldi	r24, 0x03	; 3
 d20:	62 e0       	ldi	r22, 0x02	; 2
 d22:	40 e0       	ldi	r20, 0x00	; 0
 d24:	0e 94 49 00 	call	0x92	; 0x92 <DIO_Vid_Set_Pin_Direction>
	DIO_Vid_Set_Pin_Direction(Port_C, Pin0, Output);
 d28:	82 e0       	ldi	r24, 0x02	; 2
 d2a:	60 e0       	ldi	r22, 0x00	; 0
 d2c:	41 e0       	ldi	r20, 0x01	; 1
 d2e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_Vid_Set_Pin_Direction>

	GIE_Enable();
 d32:	0e 94 6f 06 	call	0xcde	; 0xcde <GIE_Enable>
	EX_INT0_INIT(3);
 d36:	83 e0       	ldi	r24, 0x03	; 3
 d38:	0e 94 1f 05 	call	0xa3e	; 0xa3e <EX_INT0_INIT>
	EX_SET_INT0(&Test);
 d3c:	83 ea       	ldi	r24, 0xA3	; 163
 d3e:	96 e0       	ldi	r25, 0x06	; 6
 d40:	0e 94 2d 06 	call	0xc5a	; 0xc5a <EX_SET_INT0>
 d44:	ff cf       	rjmp	.-2      	; 0xd44 <main+0x2e>

00000d46 <Test>:

	}
}

void Test()
{
 d46:	df 93       	push	r29
 d48:	cf 93       	push	r28
 d4a:	cd b7       	in	r28, 0x3d	; 61
 d4c:	de b7       	in	r29, 0x3e	; 62
//	DIO_Vid_Set_Pin_Value(Port_C, Pin0, High);
//	_delay_ms(500);
//	DIO_Vid_Set_Pin_Value(Port_C, Pin0, Low);
//	_delay_ms(500);
	TOG_BIT(PORTC, 0);
 d4e:	a5 e3       	ldi	r26, 0x35	; 53
 d50:	b0 e0       	ldi	r27, 0x00	; 0
 d52:	e5 e3       	ldi	r30, 0x35	; 53
 d54:	f0 e0       	ldi	r31, 0x00	; 0
 d56:	90 81       	ld	r25, Z
 d58:	81 e0       	ldi	r24, 0x01	; 1
 d5a:	89 27       	eor	r24, r25
 d5c:	8c 93       	st	X, r24
}
 d5e:	cf 91       	pop	r28
 d60:	df 91       	pop	r29
 d62:	08 95       	ret

00000d64 <_exit>:
 d64:	f8 94       	cli

00000d66 <__stop_program>:
 d66:	ff cf       	rjmp	.-2      	; 0xd66 <__stop_program>
